{"ast":null,"code":"const key = \"RGAPI-a9bc81bb-81a1-4395-8561-45e4cb25a82b\";\nconst proxyUrl = \"https://thingproxy.freeboard.io/fetch/\";\n\nasync function fetchJSON(url) {\n  const data = await fetch(url);\n  return await data.json();\n}\n\nasync function getMatchListJSON(encryptedAccountId) {\n  const riot_api_url = `https://euw1.api.riotgames.com//lol/match/v4/matchlists/by-account/${encryptedAccountId}?api_key=${key}`;\n  const full_url = `${proxyUrl}${riot_api_url}`;\n  const json = await fetchJSON(full_url);\n  return json;\n}\n\nasync function getSummonerJSON(player) {\n  const riot_api_url = `https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${player}?api_key=${key}`;\n  const full_url = `${proxyUrl}${riot_api_url}`;\n  const json = await fetchJSON(full_url);\n  return json;\n}\n\nasync function getProfileIconId(player) {\n  const json = await getSummonerJSON(player); //////\n  // const overallLane = await getOverallLane(player);\n  //console.log(overallLane); \n  ////////////\n\n  return json.profileIconId;\n}\n\nexport async function getPlayerIconPNGLink(player) {\n  const iconId = await getProfileIconId(player);\n  return `//opgg-static.akamaized.net/images/profile_icons/profileIcon${iconId}.jpg?image=q_auto&v=1518361200`; //return `http://ddragon.leagueoflegends.com/cdn/10.15.1/img/profileicon/${iconId}.png`;\n}\nexport async function getPlayerLevel(player) {\n  const json = await getSummonerJSON(player);\n  return json.summonerLevel;\n} //naiv approach, should only be used for generalization\n\nasync function getLane(matchJSON) {\n  const lane = matchJSON.lane;\n  const role = matchJSON.role; //    Role: DUO, DUO_CARRY, DUO_SUPPORT, NONE, and SOLO\n  //    Lane: MID, TOP, BOTTOM, JUNGLE, NONE\n\n  if (lane === \"MID\" && role === \"SOLO\") {\n    return \"mid\";\n  } else if (lane === \"TOP\" && role === \"SOLO\") {\n    return \"top\";\n  } else if (lane === \"JUNGLE\" && role === \"NONE\") {\n    return \"jgl\";\n  } else if (lane === \"BOTTOM\" && role === \"DUO_SUPPORT\") {\n    return \"sup\";\n  } else if (lane === \"BOTTOM\" && role === \"DUO_CARRY\") {\n    return \"adc\";\n  } else {\n    return \"none\";\n  }\n}\n\nexport async function getOverallLane(player) {\n  const summonerInfo = await getSummonerJSON(player);\n  const matchlist = await getMatchListJSON(summonerInfo.accountId);\n  let laneMap = new Map();\n  laneMap.set(\"mid\", 0);\n  laneMap.set(\"top\", 0);\n  laneMap.set(\"jgl\", 0);\n  laneMap.set(\"sup\", 0);\n  laneMap.set(\"adc\", 0);\n  let overallLane = \"none\";\n  let i = 0;\n  let data = 0;\n\n  while (data < 11) {\n    if (matchlist.matches !== undefined && matchlist.matches[i] !== undefined && i < 30) {\n      const currentLane = await getLane(matchlist.matches[i]);\n\n      if (currentLane !== \"none\") {\n        laneMap.set(currentLane, laneMap.get(currentLane) + 1);\n        data++;\n      }\n    }\n\n    i++;\n  }\n\n  let overallLaneValue = laneMap.get(\"mid\");\n\n  for (let lane of laneMap.keys()) {\n    if (laneMap.get(lane) > overallLaneValue) {\n      overallLane = laneMap.get(lane);\n    }\n  }\n\n  return overallLane;\n}","map":{"version":3,"sources":["C:/website/src/LeagueOfLegendsApi.js"],"names":["key","proxyUrl","fetchJSON","url","data","fetch","json","getMatchListJSON","encryptedAccountId","riot_api_url","full_url","getSummonerJSON","player","getProfileIconId","profileIconId","getPlayerIconPNGLink","iconId","getPlayerLevel","summonerLevel","getLane","matchJSON","lane","role","getOverallLane","summonerInfo","matchlist","accountId","laneMap","Map","set","overallLane","i","matches","undefined","currentLane","get","overallLaneValue","keys"],"mappings":"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","sourcesContent":["const key = \"RGAPI-a9bc81bb-81a1-4395-8561-45e4cb25a82b\";\r\nconst proxyUrl = \"https://thingproxy.freeboard.io/fetch/\";\r\n\r\nasync function fetchJSON(url) {\r\n    const data = await fetch (url);\r\n    return await data.json();\r\n}\r\n\r\nasync function getMatchListJSON(encryptedAccountId) {\r\n    const riot_api_url = `https://euw1.api.riotgames.com//lol/match/v4/matchlists/by-account/${encryptedAccountId}?api_key=${key}`;\r\n    const full_url = `${proxyUrl}${riot_api_url}`;\r\n    const json = await fetchJSON(full_url);\r\n    return json;\r\n}\r\n\r\nasync function getSummonerJSON(player) {\r\n    const riot_api_url = `https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${player}?api_key=${key}`;\r\n    const full_url = `${proxyUrl}${riot_api_url}`;\r\n    const json = await fetchJSON(full_url);\r\n    return json;\r\n}\r\n\r\nasync function getProfileIconId(player) {\r\n    const json = await getSummonerJSON(player);\r\n//////\r\n   // const overallLane = await getOverallLane(player);\r\n    //console.log(overallLane); \r\n////////////\r\n    return json.profileIconId;\r\n}\r\n\r\nexport async function getPlayerIconPNGLink(player) {\r\n    const iconId = await getProfileIconId(player);\r\n    return `//opgg-static.akamaized.net/images/profile_icons/profileIcon${iconId}.jpg?image=q_auto&v=1518361200`;\r\n    //return `http://ddragon.leagueoflegends.com/cdn/10.15.1/img/profileicon/${iconId}.png`;\r\n}\r\n\r\nexport async function getPlayerLevel(player) {\r\n    const json = await getSummonerJSON(player);\r\n    return json.summonerLevel;\r\n}\r\n\r\n//naiv approach, should only be used for generalization\r\nasync function getLane(matchJSON) {\r\n    const lane = matchJSON.lane;\r\n    const role = matchJSON.role;\r\n\r\n//    Role: DUO, DUO_CARRY, DUO_SUPPORT, NONE, and SOLO\r\n//    Lane: MID, TOP, BOTTOM, JUNGLE, NONE\r\n    if (lane === \"MID\" && role === \"SOLO\") {\r\n        return \"mid\";\r\n    } else if (lane === \"TOP\" && role === \"SOLO\") {\r\n        return \"top\";\r\n    } else if (lane === \"JUNGLE\" && role === \"NONE\") {\r\n        return \"jgl\";\r\n    } else if (lane === \"BOTTOM\" && role === \"DUO_SUPPORT\") {\r\n        return \"sup\";\r\n    } else if (lane === \"BOTTOM\" && role === \"DUO_CARRY\") {\r\n        return \"adc\";\r\n    } else {\r\n        return \"none\";\r\n    }\r\n}\r\n\r\nexport async function getOverallLane(player) {\r\n    const summonerInfo = await getSummonerJSON(player);\r\n    const matchlist = await getMatchListJSON(summonerInfo.accountId);\r\n    \r\n    let laneMap = new Map();\r\n    laneMap.set(\"mid\", 0);\r\n    laneMap.set(\"top\", 0); \r\n    laneMap.set(\"jgl\", 0);\r\n    laneMap.set(\"sup\", 0); \r\n    laneMap.set(\"adc\", 0);\r\n    let overallLane = \"none\";\r\n\r\n    let i = 0;\r\n    let data = 0;\r\n    while (data < 11) {\r\n        if (matchlist.matches !== undefined && matchlist.matches[i] !== undefined && i < 30) {\r\n            const currentLane = await getLane(matchlist.matches[i]);\r\n            if (currentLane !== \"none\") {\r\n                laneMap.set(currentLane, laneMap.get(currentLane) + 1);\r\n                data++;\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n    let overallLaneValue = laneMap.get(\"mid\");\r\n    for (let lane of laneMap.keys()) {\r\n        if (laneMap.get(lane) > overallLaneValue) {\r\n            overallLane = laneMap.get(lane);\r\n        }\r\n    }\r\n    return overallLane;\r\n}"]},"metadata":{},"sourceType":"module"}