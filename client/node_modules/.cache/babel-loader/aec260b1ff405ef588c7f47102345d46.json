{"ast":null,"code":"require('./classes');\n\nconst https = require('./HttpsCaller'); // Riot specifies this as a sample regexp to validate names\n// any visible Unicode letter characters, digits (0-9), spaces, underscores, and periods.\n\n\nconst NAME_REGEXP = new RegExp('^[0-9\\\\p{L} _\\\\.]+$'); // Champion-Mastery V4\n\nconst GET_CHAMPION_MASTERY_URL = 'https://%region%.api.riotgames.com/lol/champion-mastery/v4/champion-masteries/by-summoner/%name%?api_key=%apikey%';\nconst GET_CHAMPION_MASTERY_WITH_CHAMPION_URL = 'https://%region%.api.riotgames.com/lol/champion-mastery/v4/champion-masteries/by-summoner/%name%/by-champion/%championid%?api_key=%apikey%';\nconst GET_CHAMPION_MASTER_TOTAL_URL = 'https://%region%.api.riotgames.com/lol/champion-mastery/v4/scores/by-summoner/%name%?api_key=%apikey%'; // CHAMPION-V3\n\nconst GET_CHAMPION_ROTATION_URL = 'https://%region%.api.riotgames.com/lol/platform/v3/champion-rotations?api_key=%apikey%'; // CLASH-V1 (2/5)\n\nconst GET_CLASH_BY_SUMMONER_ID_URL = 'https://%region%.api.riotgames.com/lol/clash/v1/players/by-summoner/%summoner_id%?api_key=%apikey%';\nconst GET_CLASH_TOURNAMENTS_URL = 'https://%region%.api.riotgames.com/lol/clash/v1/tournaments?api_key=%apikey%'; // LEAGUE-EXP-V4 (0/1) Not gunna bother with this, says it's experimental\n// LEAGUE-V4 (1/6)\n\nconst GET_LEAGUE_BY_SUMMONER_URL = 'https://%region%.api.riotgames.com/lol/league/v4/entries/by-summoner/%summoner_id%?api_key=%apikey%'; // LOL-STATUS-V3\n\nconst GET_STATUS_URL = 'https://%region%.api.riotgames.com/lol/status/v3/shard-data?api_key=%apikey%'; // MATCH-V4\n\nconst GET_MATCH_URL = 'https://%region%.api.riotgames.com/lol/match/v4/matches/%matchid%?api_key=%apikey%';\nconst GET_MATCHLIST_URL = 'https://%region%.api.riotgames.com/lol/match/v4/matchlists/by-account/%accountid%?api_key=%apikey%';\nconst GET_MATCH_TIMELINE_URL = 'https://%region%.api.riotgames.com/lol/match/v4/timelines/by-match/%matchid%?api_key=%apikey%';\nconst GET_MATCH_BY_TOURNAMENT_CODE_URL = 'https://%region%.api.riotgames.com/lol/match/v4/matches/by-tournament-code/%tournamentcode%/ids?api_key=%apikey%';\nconst GET_MATCH_BY_MATCH_ID_AND_TOURNAMNET_CODE_URL = 'https://%region%.api.riotgames.com/lol/match/v4/matches/%matchid%/by-tournament-code/%tournamentcode%?api_key=%apikey%'; // SPECTATOR-v4\n\nconst GET_ACTIVE_GAME_URL = 'https://%region%.api.riotgames.com/lol/spectator/v4/active-games/by-summoner/%name%?api_key=%apikey%';\nconst GET_FEATURED_GAMES_URL = 'https://%region%.api.riotgames.com/lol/spectator/v4/featured-games?api_key=%apikey%'; // SUMMONOR-V4 (1/4, rest are get by accountId, puuid, summonerId)\n\nconst GET_SUMMONER_BY_NAME_URL = 'https://%region%.api.riotgames.com/lol/summoner/v4/summoners/by-name/%name%?api_key=%apikey%'; // THIRD_PARTY_CODE-V4\n\nconst GET_THIRD_PARTY_CODE_URL = 'https://%region%.api.riotgames.com/lol/platform/v4/third-party-code/by-summoner/%summonerid%?api_key=%apikey%'; // TOURNAMENT-STUB-V4\n// TOURNAMENT-V4\n\nlet map;\nlet summoner;\nlet champion;\nlet team;\nlet profileIcon;\nlet runes;\nlet fullPerks;\n\nclass LeagueAPI {\n  constructor(apiKey, region) {\n    this.apiKey = apiKey;\n    this.region = region;\n    this.fullyLoadClasses = false;\n  }\n  /**\r\n   * Uses local or DDragon JSON files to create Objects used in results\r\n   * For example, this will changed 'mapId: 12' to 'mapObject: { id: 12 name: howlingAbyss ... }\r\n  */\n\n\n  initialize() {\n    var thisPointer = this;\n    return new Promise(function (resolve, reject) {\n      const getClassesDataFromJSON = require('./LeagueClassHandler.js');\n\n      getClassesDataFromJSON().then(function (leagueClasses) {\n        map = leagueClasses.map;\n        summoner = leagueClasses.summoner;\n        champion = leagueClasses.champion;\n        team = leagueClasses.team;\n        profileIcon = leagueClasses.profileIcon;\n        runes = leagueClasses.runes;\n        fullPerks = leagueClasses.fullPerks;\n      }).then(function () {\n        console.log('Set fully load classes to true');\n        thisPointer.fullyLoadClasses = true;\n        resolve();\n      }).catch(reject);\n    });\n  }\n\n  setFullyLoadClasses(fullyLoadClasses) {\n    this.fullyLoadClasses = fullyLoadClasses;\n  }\n\n  changeRegion(region) {\n    this.region = region;\n  }\n\n  getThirdPartyCode(accountObj) {\n    let summonerId = getSummonerIdFromParam(accountObj);\n    return makeAnHTTPSCall(getThirdPartyCode(summonerId, this.apiKey, this.region));\n  }\n\n  getStatus() {\n    return makeAnHTTPSCall(getURLStatus(this.apiKey, this.region));\n  }\n\n  getFeaturedGames() {\n    return createPromiseContainingLoadedData(getURLFeaturedGames(this.apiKey, this.region), this.fullyLoadClasses);\n  }\n\n  getMatch(matchId) {\n    const apiKey = this.apiKey;\n    const region = this.region;\n    return createPromiseContainingLoadedData(getMatchURL(matchId, this.apiKey, this.region), this.fullyLoadClasses);\n  }\n\n  getMatchByTournament(matchId, tournamentCode) {\n    const url = getURLMatchByTournamentCodeAndMatchId(tournamentCode, matchId, this.apiKey, this.region);\n    return createPromiseContainingLoadedData(url, this.fullyLoadClasses);\n  }\n\n  getMatchIdsByTournament(tournamentCode) {\n    const url = getURLMatchByTournamentCode(tournamentCode, this.apiKey, this.region);\n    return createPromiseContainingLoadedData(url, this.fullyLoadClasses);\n  }\n\n  getSummonerByName(summonerName) {\n    const url = getURLSummonerByName(summonerName, this.apiKey, this.region);\n    return createPromiseContainingLoadedData(url, this.fullyLoadClasses, LeagueAccountInfo);\n  }\n\n  getActiveGames(accountObj) {\n    const summonerId = getSummonerIdFromParam(accountObj);\n    const url = getURLActiveGames(summonerId, this.apiKey, this.region);\n    return createPromiseContainingLoadedData(url, this.fullyLoadClasses, MatchInfo);\n  }\n\n  getMatchList(accountObj) {\n    const accountId = getAccountIdFromParam(accountObj);\n    const url = getURLMatchList(accountId, this.apiKey, this.region);\n    return createPromiseContainingLoadedData(url, this.fullyLoadClasses);\n  }\n\n  getMatchTimeline(matchId) {\n    return makeAnHTTPSCall(getURLMatchTimeline(matchId, this.apiKey, this.region));\n  }\n\n  getLeagueRanking(accountObj) {\n    const summonerId = getSummonerIdFromParam(accountObj);\n    const url = getURLLeagueBySummoner(summonerId, this.apiKey, this.region);\n    return makeAnHTTPSCall(url);\n  }\n\n  getChampionMasteryTotal(accountObj) {\n    let summonerId = getSummonerIdFromParam(accountObj);\n    return makeAnHTTPSCall(getURLMasteryTotal(summonerId, this.apiKey, this.region));\n  }\n\n  getChampionMastery(accountObj) {\n    const summonerId = getSummonerIdFromParam(accountObj);\n    const apiKey = this.apiKey;\n    const region = this.region;\n    return createPromiseContainingLoadedData(getURLChampionMastery(summonerId, apiKey, region), this.fullyLoadClasses);\n  }\n\n  getChampionMasteryByChampion(accountObj, championObj) {\n    const summonerId = getSummonerIdFromParam(accountObj);\n    const championId = getChampionIdFromParam(championObj);\n    const url = getURLChampionMasteryByChampion(summonerId, championId, this.apiKey, this.region);\n    return createPromiseContainingLoadedData(url, this.fullyLoadClasses);\n  }\n\n  getClash(accountObj) {\n    const summonerId = getSummonerIdFromParam(accountObj);\n    return makeAnHTTPSCall(getURLClashBySummonerId(summonerId, this.apiKey, this.region));\n  }\n\n  getClashTournament() {\n    const url = getURLClashTournament(this.apiKey, this.region);\n    return makeAnHTTPSCall(url);\n  }\n\n  getFreeChampionRotation() {\n    return createPromiseContainingLoadedData(getURLChampRotation(this.apiKey, this.region), this.fullyLoadClasses);\n  }\n\n}\n\nfunction createPromiseContainingLoadedData(url, fullyLoadClasses, objectMappingClass) {\n  return new Promise(function (resolve, reject) {\n    makeAnHTTPSCall(url).then(function (data) {\n      if (objectMappingClass) {\n        data = objectMappingClass.from(data);\n      }\n\n      loadObject(data, fullyLoadClasses);\n      resolve(data);\n    }).catch(reject);\n  });\n}\n\nfunction loadObject(data, fullyLoadClasses) {\n  if (fullyLoadClasses) {\n    replaceObjectKeysWithValues(data);\n  }\n}\n\nfunction getChampionIdFromParam(param) {\n  championId = getNumberFromParam(param);\n\n  if (!championId) {\n    championId = getNumberFromParam(param.key);\n\n    if (!championId) {\n      championId = getNumberFromParam(param.championId);\n\n      if (!championId) {\n        throw 'invalid argument, requires championId or Champion object';\n      }\n    }\n  }\n\n  return championId;\n}\n\nfunction getSummonerIdFromParam(param) {\n  summonerId = '';\n\n  if (param instanceof LeagueAccountInfo) {\n    summonerId = getStringFromParam(param.id);\n  } else {\n    summonerId = getStringFromParam(param);\n  }\n\n  if (!summonerId) {\n    throw 'invalid argument, requires summonerId or LeagueAccountInfo object';\n  }\n\n  return summonerId;\n}\n\nfunction getAccountIdFromParam(param) {\n  accountId = '';\n\n  if (param instanceof LeagueAccountInfo) {\n    accountId = getStringFromParam(param.accountId);\n  } else {\n    accountId = getStringFromParam(param);\n  }\n\n  if (!accountId) {\n    throw 'invalid argument, requires accountId or LeagueAccountInfo object';\n  }\n\n  return accountId;\n}\n\nfunction getStringFromParam(param) {\n  let paramType = typeof param;\n\n  if (param && paramType == 'string') {\n    return param;\n  }\n}\n\nfunction getNumberFromParam(param) {\n  let paramType = typeof param;\n\n  if (param && (paramType == 'string' || paramType == 'number') && isNumeric(param)) {\n    return param;\n  }\n}\n\nfunction getMatchURL(matchId, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_MATCH_URL, apiKey, region).replace('%matchid%', matchId);\n}\n\nfunction getURLMatchList(summonerId, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_MATCHLIST_URL, apiKey, region).replace('%accountid%', summonerId);\n}\n\nfunction getURLMatchTimeline(matchId, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_MATCH_TIMELINE_URL, apiKey, region).replace('%matchid%', matchId);\n}\n\nfunction getURLMatchByTournamentcode(tournamentCode, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_MATCH_BY_TOURNAMENT_CODE_URL, apiKey, region).replace('%tournamentcode%', tournamentCode);\n}\n\nfunction getURLMatchByTournamentCodeAndMatchId(tournamentCode, matchId, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_MATCH_BY_MATCH_ID_AND_TOURNAMNET_CODE_URL, apiKey, region).replace('%tournamentcode%', tournamentCode).replace('%matchid', matchId);\n}\n\nfunction getURLMasteryTotal(summonerId, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_CHAMPION_MASTER_TOTAL_URL, apiKey, region).replace('%name%', summonerId);\n}\n\nfunction getURLActiveGames(summonerId, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_ACTIVE_GAME_URL, apiKey, region).replace('%name%', summonerId);\n}\n\nfunction getURLFeaturedGames(apiKey, region) {\n  return getURLWithRegionAndAPI(GET_FEATURED_GAMES_URL, apiKey, region);\n}\n\nfunction getURLLeagueBySummoner(summonerId, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_LEAGUE_BY_SUMMONER_URL, apiKey, region).replace('%summoner_id%', summonerId);\n}\n\nfunction getURLStatus(apiKey, region) {\n  return getURLWithRegionAndAPI(GET_STATUS_URL, apiKey, region);\n}\n\nfunction getURLChampionMastery(summonerName, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_CHAMPION_MASTERY_URL, apiKey, region).replace('%name%', summonerName);\n}\n\nfunction getURLChampionMasteryByChampion(summonerName, championId, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_CHAMPION_MASTERY_WITH_CHAMPION_URL, apiKey, region).replace('%name%', summonerName).replace('%championid%', championId);\n}\n\nfunction getURLSummonerByName(summonerName, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_SUMMONER_BY_NAME_URL, apiKey, region).replace('%name%', summonerName);\n}\n\nfunction getURLChampRotation(apiKey, region) {\n  return getURLWithRegionAndAPI(GET_CHAMPION_ROTATION_URL, apiKey, region);\n}\n/** CLASH-V1 **/\n\n\nfunction getURLClashBySummonerId(summonerId, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_CLASH_BY_SUMMONER_ID_URL, apiKey, region).replace('%summoner_id%', summonerId);\n}\n\nfunction getURLClashTournament(apiKey, region) {\n  return getURLWithRegionAndAPI(GET_CLASH_TOURNAMENTS_URL, apiKey, region);\n}\n/** end CLASH-V1 **/\n\n\nfunction getThirdPartyCode(summonerId, apiKey, region) {\n  return getURLWithRegionAndAPI(GET_THIRD_PARTY_CODE_URL, apiKey, region).replace('%summonerid%', summonerId);\n} // All endpoint URL's contain APIKey and Region\n\n\nfunction getURLWithRegionAndAPI(url, apiKey, region) {\n  return url.replace('%apikey%', apiKey).replace('%region%', region);\n}\n\nfunction isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction makeAnHTTPSCall(url) {\n  return https.makeAnHTTPSCall(url);\n} // Replaces object values such as MapId = 12 with the corresponding Object, such as MapId = { Howling abyss... };\n// TODO: Load the returned values from map, summoner, etc.\n\n\nfunction replaceObjectKeysWithValues(obj) {\n  replaceObjectFoundByKey(obj, 'teamId', 'team', team);\n  replaceObjectFoundByKeyRunes(obj);\n  replaceObjectFoundByKey(obj, 'mapId', 'mapObject', map);\n  replaceObjectFoundByKey(obj, 'spell1Id', 'spell1', summoner);\n  replaceObjectFoundByKey(obj, 'spell2Id', 'spell2', summoner);\n  replaceObjectFoundByKey(obj, 'championId', 'championObject', champion);\n  replaceObjectFoundByKey(obj, 'champion', 'championObject', champion);\n  replaceObjectFoundByKey(obj, 'freeChampionIds', 'freeChampions', champion);\n  replaceObjectFoundByKey(obj, 'freeChampionIdsForNewPlayers', 'freeChampionsForNewPlayers', champion);\n  replaceObjectFoundByKey(obj, 'profileIconId', 'profileIconObject', profileIcon);\n  replaceObjectFoundByKey(obj, 'profileIcon', 'profileIconObject', profileIcon);\n} // Runes have many functions to find by keys\n\n\nfunction replaceObjectFoundByKeyRunes(obj) {\n  const pointersToObjectsFound = [];\n\n  for (var key in obj) {\n    var value = obj[key];\n\n    if (typeof value === 'object') {\n      replaceObjectFoundByKeyRunes(value);\n    }\n\n    if (key === 'perkIds') {\n      obj[key] = fullPerks.getByKey(obj[key]);\n      renamePropertyOnObject(obj, 'perkIds', 'perkObjects');\n    } else if (key == 'perkStyle' || key == 'perkSubStyle') {\n      obj[key] = runes.getByKey(obj[key]); // don't rename the key\n\n      renamePropertyOnObject(obj, 'key', 'key');\n    }\n  }\n\n  return pointersToObjectsFound;\n}\n\nfunction replaceObjectFoundByKey(obj, oldkey, newKey, classContainingReplacement) {\n  const pointersToObjectsFound = [];\n\n  for (var key in obj) {\n    var value = obj[key];\n\n    if (typeof value === 'object') {\n      replaceObjectFoundByKey(value, oldkey, newKey, classContainingReplacement);\n    }\n\n    if (key === oldkey) {\n      obj[key] = classContainingReplacement.getByKey(obj[key]);\n      renamePropertyOnObject(obj, key, newKey);\n    }\n  }\n\n  return pointersToObjectsFound;\n}\n\nfunction renamePropertyOnObject(object, oldKey, newKey) {\n  if (oldKey !== newKey) {\n    Object.defineProperty(object, newKey, Object.getOwnPropertyDescriptor(object, oldKey));\n    delete object[oldKey];\n  }\n}\n\nmodule.exports = LeagueAPI;","map":{"version":3,"sources":["C:/website/node_modules/leagueapiwrapper/LeagueAPI/LeagueAPI.js"],"names":["require","https","NAME_REGEXP","RegExp","GET_CHAMPION_MASTERY_URL","GET_CHAMPION_MASTERY_WITH_CHAMPION_URL","GET_CHAMPION_MASTER_TOTAL_URL","GET_CHAMPION_ROTATION_URL","GET_CLASH_BY_SUMMONER_ID_URL","GET_CLASH_TOURNAMENTS_URL","GET_LEAGUE_BY_SUMMONER_URL","GET_STATUS_URL","GET_MATCH_URL","GET_MATCHLIST_URL","GET_MATCH_TIMELINE_URL","GET_MATCH_BY_TOURNAMENT_CODE_URL","GET_MATCH_BY_MATCH_ID_AND_TOURNAMNET_CODE_URL","GET_ACTIVE_GAME_URL","GET_FEATURED_GAMES_URL","GET_SUMMONER_BY_NAME_URL","GET_THIRD_PARTY_CODE_URL","map","summoner","champion","team","profileIcon","runes","fullPerks","LeagueAPI","constructor","apiKey","region","fullyLoadClasses","initialize","thisPointer","Promise","resolve","reject","getClassesDataFromJSON","then","leagueClasses","console","log","catch","setFullyLoadClasses","changeRegion","getThirdPartyCode","accountObj","summonerId","getSummonerIdFromParam","makeAnHTTPSCall","getStatus","getURLStatus","getFeaturedGames","createPromiseContainingLoadedData","getURLFeaturedGames","getMatch","matchId","getMatchURL","getMatchByTournament","tournamentCode","url","getURLMatchByTournamentCodeAndMatchId","getMatchIdsByTournament","getURLMatchByTournamentCode","getSummonerByName","summonerName","getURLSummonerByName","LeagueAccountInfo","getActiveGames","getURLActiveGames","MatchInfo","getMatchList","accountId","getAccountIdFromParam","getURLMatchList","getMatchTimeline","getURLMatchTimeline","getLeagueRanking","getURLLeagueBySummoner","getChampionMasteryTotal","getURLMasteryTotal","getChampionMastery","getURLChampionMastery","getChampionMasteryByChampion","championObj","championId","getChampionIdFromParam","getURLChampionMasteryByChampion","getClash","getURLClashBySummonerId","getClashTournament","getURLClashTournament","getFreeChampionRotation","getURLChampRotation","objectMappingClass","data","from","loadObject","replaceObjectKeysWithValues","param","getNumberFromParam","key","getStringFromParam","id","paramType","isNumeric","getURLWithRegionAndAPI","replace","getURLMatchByTournamentcode","n","isNaN","parseFloat","isFinite","obj","replaceObjectFoundByKey","replaceObjectFoundByKeyRunes","pointersToObjectsFound","value","getByKey","renamePropertyOnObject","oldkey","newKey","classContainingReplacement","object","oldKey","Object","defineProperty","getOwnPropertyDescriptor","module","exports"],"mappings":"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","sourcesContent":["require('./classes');\r\nconst https = require('./HttpsCaller');\r\n\r\n// Riot specifies this as a sample regexp to validate names\r\n// any visible Unicode letter characters, digits (0-9), spaces, underscores, and periods.\r\nconst NAME_REGEXP = new RegExp('^[0-9\\\\p{L} _\\\\.]+$');\r\n\r\n// Champion-Mastery V4\r\nconst GET_CHAMPION_MASTERY_URL = 'https://%region%.api.riotgames.com/lol/champion-mastery/v4/champion-masteries/by-summoner/%name%?api_key=%apikey%';\r\nconst GET_CHAMPION_MASTERY_WITH_CHAMPION_URL = 'https://%region%.api.riotgames.com/lol/champion-mastery/v4/champion-masteries/by-summoner/%name%/by-champion/%championid%?api_key=%apikey%';\r\nconst GET_CHAMPION_MASTER_TOTAL_URL = 'https://%region%.api.riotgames.com/lol/champion-mastery/v4/scores/by-summoner/%name%?api_key=%apikey%';\r\n\r\n// CHAMPION-V3\r\nconst GET_CHAMPION_ROTATION_URL = 'https://%region%.api.riotgames.com/lol/platform/v3/champion-rotations?api_key=%apikey%';\r\n\r\n// CLASH-V1 (2/5)\r\nconst GET_CLASH_BY_SUMMONER_ID_URL = 'https://%region%.api.riotgames.com/lol/clash/v1/players/by-summoner/%summoner_id%?api_key=%apikey%';\r\nconst GET_CLASH_TOURNAMENTS_URL = 'https://%region%.api.riotgames.com/lol/clash/v1/tournaments?api_key=%apikey%';\r\n\r\n// LEAGUE-EXP-V4 (0/1) Not gunna bother with this, says it's experimental\r\n\r\n// LEAGUE-V4 (1/6)\r\nconst GET_LEAGUE_BY_SUMMONER_URL = 'https://%region%.api.riotgames.com/lol/league/v4/entries/by-summoner/%summoner_id%?api_key=%apikey%';\r\n\r\n// LOL-STATUS-V3\r\nconst GET_STATUS_URL = 'https://%region%.api.riotgames.com/lol/status/v3/shard-data?api_key=%apikey%';\r\n\r\n// MATCH-V4\r\nconst GET_MATCH_URL = 'https://%region%.api.riotgames.com/lol/match/v4/matches/%matchid%?api_key=%apikey%';\r\nconst GET_MATCHLIST_URL = 'https://%region%.api.riotgames.com/lol/match/v4/matchlists/by-account/%accountid%?api_key=%apikey%'\r\nconst GET_MATCH_TIMELINE_URL = 'https://%region%.api.riotgames.com/lol/match/v4/timelines/by-match/%matchid%?api_key=%apikey%';\r\nconst GET_MATCH_BY_TOURNAMENT_CODE_URL = 'https://%region%.api.riotgames.com/lol/match/v4/matches/by-tournament-code/%tournamentcode%/ids?api_key=%apikey%';\r\nconst GET_MATCH_BY_MATCH_ID_AND_TOURNAMNET_CODE_URL = 'https://%region%.api.riotgames.com/lol/match/v4/matches/%matchid%/by-tournament-code/%tournamentcode%?api_key=%apikey%';\r\n\r\n// SPECTATOR-v4\r\nconst GET_ACTIVE_GAME_URL = 'https://%region%.api.riotgames.com/lol/spectator/v4/active-games/by-summoner/%name%?api_key=%apikey%';\r\nconst GET_FEATURED_GAMES_URL = 'https://%region%.api.riotgames.com/lol/spectator/v4/featured-games?api_key=%apikey%';\r\n\r\n// SUMMONOR-V4 (1/4, rest are get by accountId, puuid, summonerId)\r\nconst GET_SUMMONER_BY_NAME_URL = 'https://%region%.api.riotgames.com/lol/summoner/v4/summoners/by-name/%name%?api_key=%apikey%';\r\n\r\n// THIRD_PARTY_CODE-V4\r\nconst GET_THIRD_PARTY_CODE_URL = 'https://%region%.api.riotgames.com/lol/platform/v4/third-party-code/by-summoner/%summonerid%?api_key=%apikey%';\r\n\r\n// TOURNAMENT-STUB-V4\r\n// TOURNAMENT-V4\r\n\r\nlet map;\r\nlet summoner;\r\nlet champion;\r\nlet team;\r\nlet profileIcon;\r\nlet runes;\r\nlet fullPerks;\r\n\r\nclass LeagueAPI\r\n{\r\n\tconstructor(apiKey, region)\r\n\t{\r\n\t\tthis.apiKey = apiKey;\r\n\t\tthis.region = region;\r\n\t\tthis.fullyLoadClasses = false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Uses local or DDragon JSON files to create Objects used in results\r\n\t * For example, this will changed 'mapId: 12' to 'mapObject: { id: 12 name: howlingAbyss ... }\r\n\t*/\r\n\tinitialize()\r\n\t{\r\n\t\tvar thisPointer = this;\r\n\t\treturn new Promise(function(resolve, reject) {\r\n      const getClassesDataFromJSON = require('./LeagueClassHandler.js');\r\n      \r\n\t\t\tgetClassesDataFromJSON().then(function(leagueClasses) {\r\n\t\t\t\tmap = leagueClasses.map;\r\n\t\t\t\tsummoner = leagueClasses.summoner;\r\n\t\t\t\tchampion = leagueClasses.champion;\r\n\t\t\t\tteam = leagueClasses.team;\r\n\t\t\t\tprofileIcon = leagueClasses.profileIcon;\r\n\t\t\t\trunes = leagueClasses.runes;\r\n\t\t\t\tfullPerks = leagueClasses.fullPerks;\r\n\t\t\t})\r\n\t\t\t.then(function() {\r\n\t\t\t\tconsole.log('Set fully load classes to true');\r\n\t\t\t\tthisPointer.fullyLoadClasses = true;\r\n\t\t\t\tresolve();\r\n\t\t\t})\r\n\t\t\t.catch(reject);\r\n\t\t});\r\n\t}\r\n\t\r\n\tsetFullyLoadClasses(fullyLoadClasses)\r\n\t{\r\n\t\tthis.fullyLoadClasses = fullyLoadClasses;\r\n\t}\r\n\t\r\n\tchangeRegion(region)\r\n\t{\r\n\t\tthis.region = region;\r\n\t}\r\n\t\r\n\tgetThirdPartyCode(accountObj)\r\n\t{\r\n\t\tlet summonerId = getSummonerIdFromParam(accountObj);\r\n\t\t\r\n\t\treturn makeAnHTTPSCall(getThirdPartyCode(summonerId, this.apiKey, this.region));\r\n\t}\r\n\t\r\n\tgetStatus()\r\n\t{\r\n\t\treturn makeAnHTTPSCall(getURLStatus(this.apiKey, this.region));\r\n\t}\r\n\t\r\n\tgetFeaturedGames()\r\n\t{\r\n\t\treturn createPromiseContainingLoadedData(getURLFeaturedGames(this.apiKey, this.region), this.fullyLoadClasses);\r\n\t}\r\n\t\r\n\tgetMatch(matchId)\r\n\t{\r\n\t\tconst apiKey = this.apiKey;\r\n\t\tconst region = this.region;\r\n\t\t\r\n\t\treturn createPromiseContainingLoadedData(getMatchURL(matchId, this.apiKey, this.region), this.fullyLoadClasses);\r\n\t}\r\n\t\r\n\tgetMatchByTournament(matchId, tournamentCode)\r\n\t{\r\n\t\tconst url = getURLMatchByTournamentCodeAndMatchId(tournamentCode, matchId, this.apiKey, this.region);\r\n\t\treturn createPromiseContainingLoadedData(url, this.fullyLoadClasses);\r\n\t}\r\n\t\r\n\tgetMatchIdsByTournament(tournamentCode)\r\n\t{\r\n\t\tconst url = getURLMatchByTournamentCode(tournamentCode, this.apiKey, this.region);\r\n\t\treturn createPromiseContainingLoadedData(url, this.fullyLoadClasses);\r\n\t}\r\n\r\n\tgetSummonerByName(summonerName)\r\n\t{\r\n\t\tconst url = getURLSummonerByName(summonerName, this.apiKey, this.region);\r\n\t\t\r\n\t\treturn createPromiseContainingLoadedData(url, this.fullyLoadClasses, LeagueAccountInfo);\r\n\t}\r\n\t\r\n\tgetActiveGames(accountObj)\r\n\t{\r\n\t\tconst summonerId = getSummonerIdFromParam(accountObj);\r\n\t\tconst url = getURLActiveGames(summonerId, this.apiKey, this.region);\r\n\t\t\r\n\t\treturn createPromiseContainingLoadedData(url, this.fullyLoadClasses, MatchInfo);\r\n\t}\r\n\t\r\n\tgetMatchList(accountObj)\r\n\t{\r\n\t\tconst accountId = getAccountIdFromParam(accountObj);\r\n\t\tconst url = getURLMatchList(accountId, this.apiKey, this.region);\r\n\t\t\r\n\t\treturn createPromiseContainingLoadedData(url, this.fullyLoadClasses);\r\n\t}\r\n\t\r\n\tgetMatchTimeline(matchId)\r\n\t{\r\n\t\treturn makeAnHTTPSCall(getURLMatchTimeline(matchId, this.apiKey, this.region));\r\n\t}\r\n  \r\n  getLeagueRanking(accountObj) \r\n  {\r\n\t\tconst summonerId = getSummonerIdFromParam(accountObj);\r\n    const url = getURLLeagueBySummoner(summonerId, this.apiKey, this.region);\r\n    \r\n    return makeAnHTTPSCall(url);\r\n  }\r\n\t\r\n\tgetChampionMasteryTotal(accountObj)\r\n\t{\r\n\t\tlet summonerId = getSummonerIdFromParam(accountObj);\r\n\t\t\r\n\t\treturn makeAnHTTPSCall(getURLMasteryTotal(summonerId, this.apiKey, this.region));\r\n\t}\r\n\r\n\tgetChampionMastery(accountObj)\r\n\t{\r\n\t\tconst summonerId = getSummonerIdFromParam(accountObj);\r\n\t\tconst apiKey = this.apiKey;\r\n\t\tconst region = this.region;\r\n\t\t\r\n\t\treturn createPromiseContainingLoadedData(getURLChampionMastery(summonerId, apiKey, region), this.fullyLoadClasses);\r\n\t}\r\n\t\r\n\tgetChampionMasteryByChampion(accountObj, championObj)\r\n\t{\r\n\t\tconst summonerId = getSummonerIdFromParam(accountObj);\r\n\t\tconst championId = getChampionIdFromParam(championObj);\r\n\t\tconst url = getURLChampionMasteryByChampion(summonerId, championId, this.apiKey, this.region);\r\n\t\t\r\n\t\treturn createPromiseContainingLoadedData(url, this.fullyLoadClasses);\r\n\t}\r\n  \r\n  getClash(accountObj)\r\n  {\r\n    const summonerId = getSummonerIdFromParam(accountObj);\r\n    \r\n    return makeAnHTTPSCall(getURLClashBySummonerId(summonerId, this.apiKey, this.region));\r\n  }\r\n  \r\n  getClashTournament()\r\n  {\r\n    const url = getURLClashTournament(this.apiKey, this.region);\r\n\r\n    return makeAnHTTPSCall(url);\r\n  }\r\n\t\r\n\tgetFreeChampionRotation()\r\n\t{\r\n\t\treturn createPromiseContainingLoadedData(getURLChampRotation(this.apiKey, this.region), this.fullyLoadClasses);\r\n\t}\r\n}\r\n\r\nfunction createPromiseContainingLoadedData(url, fullyLoadClasses, objectMappingClass)\r\n{\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\tmakeAnHTTPSCall(url)\r\n\t\t.then(function(data) \r\n\t\t{\r\n\t\t\tif (objectMappingClass)\r\n\t\t\t{\r\n\t\t\t\tdata = objectMappingClass.from(data);\r\n\t\t\t}\r\n\t\t\tloadObject(data, fullyLoadClasses);\r\n\t\t\tresolve(data);\r\n\t\t})\r\n\t\t.catch(reject);\r\n\t});\r\n}\r\n\r\nfunction loadObject(data, fullyLoadClasses)\r\n{\r\n\tif (fullyLoadClasses)\r\n\t{\r\n\t\treplaceObjectKeysWithValues(data);\r\n\t}\r\n}\r\n\r\nfunction getChampionIdFromParam(param)\r\n{\r\n\tchampionId = getNumberFromParam(param);\r\n\t\r\n\tif (!championId)\r\n\t{\r\n\t\tchampionId = getNumberFromParam(param.key);\r\n\t\t\r\n\t\tif (!championId)\r\n\t\t{\r\n\t\t\tchampionId = getNumberFromParam(param.championId)\r\n\t\t\t\r\n\t\t\tif (!championId)\r\n\t\t\t{\r\n\t\t\t\tthrow 'invalid argument, requires championId or Champion object';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn championId;\r\n}\r\n\r\nfunction getSummonerIdFromParam(param)\r\n{\r\n\tsummonerId = '';\r\n\t\r\n\tif (param instanceof LeagueAccountInfo)\r\n\t{\r\n\t\tsummonerId = getStringFromParam(param.id);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tsummonerId = getStringFromParam(param);\r\n\t}\r\n\t\r\n\tif (!summonerId)\r\n\t{\r\n\t\tthrow 'invalid argument, requires summonerId or LeagueAccountInfo object';\r\n\t}\r\n\t\r\n\treturn summonerId;\r\n}\r\n\r\nfunction getAccountIdFromParam(param)\r\n{\r\n\taccountId = '';\r\n\t\r\n\tif (param instanceof LeagueAccountInfo)\r\n\t{\r\n\t\taccountId = getStringFromParam(param.accountId);\r\n\t}\r\n\telse\r\n\t{\r\n\t\taccountId = getStringFromParam(param);\r\n\t}\r\n\t\r\n\tif (!accountId)\r\n\t{\r\n\t\tthrow 'invalid argument, requires accountId or LeagueAccountInfo object';\r\n\t}\r\n\t\r\n\treturn accountId;\r\n}\r\n\r\nfunction getStringFromParam(param)\r\n{\r\n\tlet paramType = typeof param;\r\n\t\r\n\tif (param && paramType == 'string')\r\n\t{\r\n\t\treturn param;\r\n\t}\r\n}\r\n\r\nfunction getNumberFromParam(param)\r\n{\r\n\tlet paramType = typeof param;\r\n\t\r\n\tif (param && (paramType == 'string' || paramType == 'number') && isNumeric(param))\r\n\t{\r\n\t\treturn param;\r\n\t}\r\n}\r\n\r\nfunction getMatchURL(matchId, apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_MATCH_URL, apiKey, region).replace('%matchid%', matchId);\r\n}\r\n\r\nfunction getURLMatchList(summonerId, apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_MATCHLIST_URL, apiKey, region).replace('%accountid%', summonerId);\r\n}\r\n\r\nfunction getURLMatchTimeline(matchId, apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_MATCH_TIMELINE_URL, apiKey, region).replace('%matchid%', matchId);\r\n}\r\n\r\nfunction getURLMatchByTournamentcode(tournamentCode, apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_MATCH_BY_TOURNAMENT_CODE_URL, apiKey, region).replace('%tournamentcode%', tournamentCode);\r\n}\r\n\r\nfunction getURLMatchByTournamentCodeAndMatchId(tournamentCode, matchId, apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_MATCH_BY_MATCH_ID_AND_TOURNAMNET_CODE_URL, apiKey, region).replace('%tournamentcode%', tournamentCode).replace('%matchid', matchId);\r\n}\r\n\r\nfunction getURLMasteryTotal(summonerId, apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_CHAMPION_MASTER_TOTAL_URL, apiKey, region).replace('%name%', summonerId);\r\n}\r\n\r\nfunction getURLActiveGames(summonerId, apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_ACTIVE_GAME_URL, apiKey, region).replace('%name%', summonerId);\r\n}\r\n\r\nfunction getURLFeaturedGames(apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_FEATURED_GAMES_URL, apiKey, region);\r\n}\r\n\r\nfunction getURLLeagueBySummoner(summonerId, apiKey, region)\r\n{\r\n  return getURLWithRegionAndAPI(GET_LEAGUE_BY_SUMMONER_URL, apiKey, region).replace('%summoner_id%', summonerId);\r\n}\r\n\r\nfunction getURLStatus(apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_STATUS_URL, apiKey, region);\r\n}\r\n\r\nfunction getURLChampionMastery(summonerName, apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_CHAMPION_MASTERY_URL, apiKey, region).replace('%name%', summonerName);\r\n}\r\n\r\nfunction getURLChampionMasteryByChampion(summonerName, championId, apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_CHAMPION_MASTERY_WITH_CHAMPION_URL, apiKey, region).replace('%name%', summonerName).replace('%championid%', championId);\r\n}\r\n\r\nfunction getURLSummonerByName(summonerName, apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_SUMMONER_BY_NAME_URL, apiKey, region).replace('%name%', summonerName);\r\n}\r\n\r\nfunction getURLChampRotation(apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_CHAMPION_ROTATION_URL, apiKey, region);\r\n}\r\n\r\n/** CLASH-V1 **/\r\nfunction getURLClashBySummonerId(summonerId, apiKey, region)\r\n{\r\n  return getURLWithRegionAndAPI(GET_CLASH_BY_SUMMONER_ID_URL, apiKey, region).replace('%summoner_id%', summonerId);\r\n}\r\n\r\nfunction getURLClashTournament(apiKey, region)\r\n{\r\n  return getURLWithRegionAndAPI(GET_CLASH_TOURNAMENTS_URL, apiKey, region);\r\n}\r\n/** end CLASH-V1 **/\r\n\r\nfunction getThirdPartyCode(summonerId, apiKey, region)\r\n{\r\n\treturn getURLWithRegionAndAPI(GET_THIRD_PARTY_CODE_URL, apiKey, region).replace('%summonerid%', summonerId);\r\n}\r\n\r\n// All endpoint URL's contain APIKey and Region\r\nfunction getURLWithRegionAndAPI(url, apiKey, region)\r\n{\r\n\treturn url.replace('%apikey%', apiKey).replace('%region%', region);\r\n}\r\n\r\nfunction isNumeric(n) \r\n{\r\n\treturn !isNaN(parseFloat(n)) && isFinite(n);\r\n}\r\n\r\nfunction makeAnHTTPSCall(url)\r\n{\r\n\treturn https.makeAnHTTPSCall(url);\r\n}\r\n\r\n// Replaces object values such as MapId = 12 with the corresponding Object, such as MapId = { Howling abyss... };\r\n// TODO: Load the returned values from map, summoner, etc.\r\nfunction replaceObjectKeysWithValues(obj) \r\n{\r\n\treplaceObjectFoundByKey(obj, 'teamId', 'team', team);\r\n\treplaceObjectFoundByKeyRunes(obj);\r\n\treplaceObjectFoundByKey(obj, 'mapId', 'mapObject', map);\r\n\treplaceObjectFoundByKey(obj, 'spell1Id', 'spell1', summoner);\r\n\treplaceObjectFoundByKey(obj, 'spell2Id', 'spell2', summoner);\r\n\treplaceObjectFoundByKey(obj, 'championId', 'championObject', champion);\r\n\treplaceObjectFoundByKey(obj, 'champion', 'championObject', champion);\r\n\treplaceObjectFoundByKey(obj, 'freeChampionIds', 'freeChampions', champion);\r\n\treplaceObjectFoundByKey(obj, 'freeChampionIdsForNewPlayers', 'freeChampionsForNewPlayers', champion);\r\n\t\r\n\treplaceObjectFoundByKey(obj, 'profileIconId', 'profileIconObject', profileIcon);\r\n\treplaceObjectFoundByKey(obj, 'profileIcon', 'profileIconObject', profileIcon);\r\n}\r\n\r\n// Runes have many functions to find by keys\r\nfunction replaceObjectFoundByKeyRunes(obj)\r\n{\r\n\tconst pointersToObjectsFound = [];\r\n\t\r\n\tfor (var key in obj) \r\n\t{\r\n\t\tvar value = obj[key];\r\n\r\n    if (typeof value === 'object') \r\n    {\r\n      replaceObjectFoundByKeyRunes(value);\r\n    }\r\n\r\n\t\tif (key === 'perkIds')\r\n\t\t{\r\n\t\t\tobj[key] = fullPerks.getByKey(obj[key]);\r\n\t\t\trenamePropertyOnObject(obj, 'perkIds', 'perkObjects');\r\n    }\r\n\t\telse if (key == 'perkStyle' || key == 'perkSubStyle')\r\n\t\t{\r\n\t\t\tobj[key] = runes.getByKey(obj[key]);\r\n\t\t\t// don't rename the key\r\n\t\t\trenamePropertyOnObject(obj, 'key', 'key');\r\n\t\t}\r\n  }\r\n\t\r\n\treturn pointersToObjectsFound;\r\n}\r\n\r\nfunction replaceObjectFoundByKey(obj, oldkey, newKey, classContainingReplacement)\r\n{\r\n\tconst pointersToObjectsFound = [];\r\n\t\r\n\tfor (var key in obj) \r\n\t{\r\n\t\tvar value = obj[key];\r\n    \r\n    if (typeof value === 'object') \r\n    {\r\n        replaceObjectFoundByKey(value, oldkey, newKey, classContainingReplacement);\r\n    }\r\n\r\n    if (key === oldkey) \r\n    {\r\n\t\t  obj[key] = classContainingReplacement.getByKey(obj[key]);\r\n\t\t  renamePropertyOnObject(obj, key, newKey);\r\n    }\r\n  }\r\n\t\r\n\treturn pointersToObjectsFound;\r\n}\r\n\r\nfunction renamePropertyOnObject(object, oldKey, newKey)\r\n{\r\n\tif (oldKey !== newKey) \r\n\t{\r\n\t\tObject.defineProperty(object, newKey,\r\n\t\tObject.getOwnPropertyDescriptor(object, oldKey));\r\n\t\tdelete object[oldKey];\r\n\t}\r\n}\r\n\r\nmodule.exports = LeagueAPI;\r\n"]},"metadata":{},"sourceType":"script"}