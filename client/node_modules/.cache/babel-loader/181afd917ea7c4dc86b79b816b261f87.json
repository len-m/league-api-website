{"ast":null,"code":"var _jsxFileName = \"C:\\\\website\\\\client\\\\src\\\\App\\\\pages\\\\myslibros\\\\LeagueProfile.js\";\n//TODO: own css for myslibros page\nimport React, { useEffect, useState } from 'react';\nimport '../../App.css';\nimport { getPlayerIconPNGLink, getPlayerLevel, getFlexRank, get_Solo_Duo_Rank } from './LeagueOfLegendsApi.js';\n/**\r\n * League player profile for Myslibros\r\n */\n\nfunction LeagueProfile(props) {\n  /*\r\n      useEffect(() => {\r\n          fetchPlayers();\r\n      }, []); \r\n      */\n  //const [player, setPlayer] = useState([]);\n  let player = {};\n  useEffect(() => {\n    fetch('/api/leagueoflegends/players').then(res => res.json()).then(players => {\n      let isCached = false;\n\n      for (var i = 0; i < players.length; i++) {\n        if (players[i].summonerName === props.leagueName) {\n          player = players[i];\n          isCached = true;\n          break;\n        }\n      }\n\n      if (isCached === false) {\n        console.log(props.leagueName + \" musst be cached\"); //cache player\n      }\n    }).catch(error => {\n      //player isnt in cache\n      //=> add him to cache\n      console.error('Error:', error);\n    });\n  }, []);\n  /*const fetchPlayers = async () => {\r\n      var json = {};\r\n      json.name = props.leagueName;\r\n      json.level = fetch('/api/leagueoflegends/players')\r\n          .then(res => res.json())\r\n          .then(players => ) \r\n          \r\n          \r\n          //await getPlayerLevel(props.leagueName);\r\n      json.iconSrc = await getPlayerIconPNGLink(props.leagueName);\r\n      json.flexRank = await getFlexRank(props.leagueName);\r\n      json.soloDuoRank = await get_Solo_Duo_Rank(props.leagueName);\r\n      //json.lane = await getOverallLane(props.leagueName);\r\n      const player = JSON.parse(JSON.stringify(json));\r\n      setPlayer(player);\r\n    };*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-profile-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-profile-header-picture-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-profile-header-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default LeagueProfile;","map":{"version":3,"sources":["C:/website/client/src/App/pages/myslibros/LeagueProfile.js"],"names":["React","useEffect","useState","getPlayerIconPNGLink","getPlayerLevel","getFlexRank","get_Solo_Duo_Rank","LeagueProfile","props","player","fetch","then","res","json","players","isCached","i","length","summonerName","leagueName","console","log","catch","error"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP;AACA,SAAQC,oBAAR,EAA8BC,cAA9B,EAA8CC,WAA9C,EAA2DC,iBAA3D,QAAmF,yBAAnF;AAEA;;;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC9B;;;;;AAKG;AAEC,MAAIC,MAAM,GAAG,EAAb;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,OAAO,IAAI;AACb,UAAIC,QAAQ,GAAG,KAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAIF,OAAO,CAACE,CAAD,CAAP,CAAWE,YAAX,KAA4BV,KAAK,CAACW,UAAtC,EAAkD;AAC9CV,UAAAA,MAAM,GAAGK,OAAO,CAACE,CAAD,CAAhB;AACAD,UAAAA,QAAQ,GAAG,IAAX;AACA;AACH;AACJ;;AACD,UAAIA,QAAQ,KAAK,KAAjB,EAAwB;AACpBK,QAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACW,UAAN,GAAmB,kBAA/B,EADoB,CAEpB;AACH;AACJ,KAfD,EAeGG,KAfH,CAeUC,KAAD,IAAW;AAChB;AACA;AACAH,MAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACH,KAnBD;AAoBH,GArBQ,EAqBN,EArBM,CAAT;AA4BA;;;;;;;;;;;;;;;;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAII;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAqBH;;AAED,eAAehB,aAAf","sourcesContent":["//TODO: own css for myslibros page\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../../App.css';\r\nimport {getPlayerIconPNGLink, getPlayerLevel, getFlexRank, get_Solo_Duo_Rank} from './LeagueOfLegendsApi.js';\r\n\r\n/**\r\n * League player profile for Myslibros\r\n */\r\nfunction LeagueProfile(props) {\r\n/*\r\n    useEffect(() => {\r\n        fetchPlayers();\r\n    }, []); \r\n    */\r\n   //const [player, setPlayer] = useState([]);\r\n\r\n    let player = {}; \r\n    useEffect(() => {\r\n        fetch('/api/leagueoflegends/players')\r\n        .then(res => res.json())\r\n        .then(players => {\r\n            let isCached = false;\r\n            for (var i = 0; i < players.length; i++) {\r\n                if (players[i].summonerName === props.leagueName) {\r\n                    player = players[i];\r\n                    isCached = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (isCached === false) {\r\n                console.log(props.leagueName + \" musst be cached\");\r\n                //cache player\r\n            }\r\n        }).catch((error) => {\r\n            //player isnt in cache\r\n            //=> add him to cache\r\n            console.error('Error:', error);\r\n        });\r\n    }, [])\r\n\r\n  \r\n\r\n    \r\n        \r\n\r\n    /*const fetchPlayers = async () => {\r\n        var json = {};\r\n        json.name = props.leagueName;\r\n        json.level = fetch('/api/leagueoflegends/players')\r\n            .then(res => res.json())\r\n            .then(players => ) \r\n            \r\n            \r\n            //await getPlayerLevel(props.leagueName);\r\n        json.iconSrc = await getPlayerIconPNGLink(props.leagueName);\r\n        json.flexRank = await getFlexRank(props.leagueName);\r\n        json.soloDuoRank = await get_Solo_Duo_Rank(props.leagueName);\r\n        //json.lane = await getOverallLane(props.leagueName);\r\n        const player = JSON.parse(JSON.stringify(json));\r\n        setPlayer(player);\r\n      };*/\r\n    \r\n    return (\r\n        <div className=\"league-profile\">\r\n            <div className=\"league-profile-header\">\r\n                <div className=\"league-profile-header-picture-container\">\r\n                    {/*<img className=\"league-profile-picture\" src={player.iconSrc} alt=\"\"></img>*/}\r\n                </div>\r\n                <div className=\"league-profile-header-text\">\r\n                    {/*<h1>{player.name}</h1>\r\n                    <h1>Level: {player.level}</h1>*/}\r\n                </div>\r\n            </div>\r\n            <div className=\"league-info\">\r\n                {\r\n                    //img for solo duo rank: `opgg-static.akamaized.net/images/medals/${player.soloDuoRank}.png?image=q_auto&v=1`\r\n                    //img for flex: `opgg-static.akamaized.net/images/medals/${player.flexRank}.png?image=q_auto&v=1`\r\n                }\r\n                {/*<h1>{player.soloDuoRank}</h1>\r\n                <h1>{player.flexRank}</h1>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeagueProfile;"]},"metadata":{},"sourceType":"module"}