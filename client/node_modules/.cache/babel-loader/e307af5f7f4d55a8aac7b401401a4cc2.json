{"ast":null,"code":"const https = require('./HttpsCaller');\n\nconst GET_VERSION_URL = 'https://ddragon.leagueoflegends.com/api/versions.json';\nconst ddragonURL = 'https://ddragon.leagueoflegends.com/cdn';\nconst localURL = '.';\nconst mapJsonURI = '%url%/%apiversion%/data/en_US/map.json';\nconst summonerJsonURI = '%url%/%apiversion%/data/en_US/summoner.json';\nconst championJsonURI = '%url%/%apiversion%/data/en_US/champion.json';\nconst runesJsonURI = '%url%/%apiversion%/data/en_US/runesReforged.json';\nconst profileIconURI = '%url%/%apiversion%/data/en_US/profileicon.json'; // There is no official endpoint for the stat modifiers.\n\nconst unofficalPerkURI = 'https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/perks.json';\nconst localPerkURI = '%url%/%apiversion%/data/en_US/perksFull.json';\n\nmodule.exports = function getClassesDataFromJSON() {\n  return new Promise(function (resolve, reject) {\n    getLatestApiVersion().then(function (latestApiVersion) {\n      const mapPromise = getLeagueObject(latestApiVersion, mapJsonURI);\n      const summonerPromise = getLeagueObject(latestApiVersion, summonerJsonURI);\n      const championPromise = getLeagueObject(latestApiVersion, championJsonURI);\n      const runesPerksPromise = getLeagueObject(latestApiVersion, runesJsonURI);\n      const fullPerkPromise = getLeagueFullPerksObject(latestApiVersion);\n      const profileIconPromise = getLeagueObject(latestApiVersion, profileIconURI);\n      Promise.all([mapPromise, summonerPromise, championPromise, runesPerksPromise, fullPerkPromise, profileIconPromise]).then(function (data) {\n        const mapObj = data[0];\n        const summonerObj = data[1];\n        const championObj = data[2];\n        const runesPerksObj = data[3];\n        const fullPerkObj = data[4];\n        const profileIconObj = data[5];\n        mapObj.getByKey = createFindByFunction('MapId');\n        summonerObj.getByKey = createFindByFunction('key');\n        championObj.getByKey = createFindByFunction('key');\n\n        runesPerksObj.getByKey = function (idValue) {\n          let objs = Object.values(this);\n          return Object.values(objs).find(c => {\n            return c['id'] == idValue;\n          });\n        };\n\n        fullPerkObj.getByKey = createFindByFunction('id');\n\n        profileIconObj.getByKey = function (id) {\n          return profileIconObj[id];\n        };\n\n        const teamObj = {\n          '200': 'red',\n          '100': 'blue'\n        };\n\n        teamObj.getByKey = function getByKey(id) {\n          if (id == '200') return 'red';else if (id == 100) return 'blue';\n        };\n\n        resolve({\n          'map': mapObj,\n          'summoner': summonerObj,\n          'champion': championObj,\n          'team': teamObj,\n          'profileIcon': profileIconObj,\n          'runes': runesPerksObj,\n          'fullPerks': fullPerkObj\n        });\n      });\n    }).catch(reject);\n  });\n}; // TODO: Faster way would be to keep an Array, and get by the index instead of invoking Object.values() every time.\n\n\nfunction createFindByFunction(keyNameToFindBy) {\n  return function (key) {\n    const objs = Object.values(this);\n\n    if (Array.isArray(key)) {\n      const foundObjects = [];\n\n      for (let i = 0; i < key.length; i++) {\n        foundObjects.push(findBy(objs, keyNameToFindBy, key[i]));\n      }\n\n      return foundObjects;\n    }\n\n    return findBy(objs, keyNameToFindBy, key);\n  };\n}\n\nfunction findBy(propertyArray, keyNameToFindBy, keyToFind) {\n  let foundSummonerObj;\n\n  for (var i = 0; i < propertyArray.length; i++) {\n    foundSummonerObj = Object.values(propertyArray[i]).find(c => {\n      return c[keyNameToFindBy] == keyToFind;\n    }); // perks work differently\n\n    if (!foundSummonerObj && propertyArray[i][keyNameToFindBy] == keyToFind) {\n      foundSummonerObj = propertyArray[i];\n    }\n\n    if (foundSummonerObj) {\n      break;\n    }\n  }\n\n  return foundSummonerObj;\n} // Full perk information is special since there is no official API for it.\n\n\nfunction getLeagueFullPerksObject(latestApiVersion) {\n  return new Promise(function (resolve, reject) {\n    let url = transformURL(localPerkURI, localURL, latestApiVersion);\n    let leagueObject = tryToResolveImport(url);\n\n    if (!leagueObject) {\n      https.makeAnHTTPSCall(unofficalPerkURI).then(function (data) {\n        resolve(data);\n      });\n    } else {\n      resolve(leagueObject);\n    }\n  });\n}\n\nfunction getLeagueObject(latestApiVersion, objectJSONUrl) {\n  return new Promise(function (resolve, reject) {\n    let url = transformURL(objectJSONUrl, localURL, latestApiVersion);\n    let leagueObject = tryToResolveImport(url); // Object could not be resolved. E.G we don't have the files for the latest version\n\n    if (!leagueObject) {\n      url = transformURL(objectJSONUrl, ddragonURL, latestApiVersion);\n      https.makeAnHTTPSCall(url).then(function (data) {\n        resolve(data);\n      }).catch(reject);\n    } else {\n      resolve(leagueObject);\n    }\n  });\n}\n/**\r\n * Gets latest api version based on the get version url. E.G 9.9.1\r\n*/\n\n\nfunction getLatestApiVersion() {\n  return new Promise(function (resolve, reject) {\n    https.makeAnHTTPSCall(GET_VERSION_URL).then(function (data) {\n      resolve(data[0]);\n    }).catch(reject);\n  });\n}\n/**\r\n * replaces '%url%' and '%apiversion%' with the paramaters passed\r\n*/\n\n\nfunction transformURL(url, prefixURL, apiVersion) {\n  return url.replace('%url%', prefixURL).replace('%apiversion%', apiVersion);\n}\n/**\r\n * Given the import URL, tries to 'require()' it. If Module is not found, returns null/undefined.\r\n*/\n\n\nfunction tryToResolveImport(importUrl) {\n  let result;\n\n  try {\n    result = require(importUrl);\n  } catch (e) {\n    if (e instanceof Error && e.code === \"MODULE_NOT_FOUND\") {\n      console.log(\"WARNING: Cannot load import: \" + importUrl);\n    } else {\n      throw e;\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/website/node_modules/leagueapiwrapper/LeagueAPI/LeagueClassHandler.js"],"names":["https","require","GET_VERSION_URL","ddragonURL","localURL","mapJsonURI","summonerJsonURI","championJsonURI","runesJsonURI","profileIconURI","unofficalPerkURI","localPerkURI","module","exports","getClassesDataFromJSON","Promise","resolve","reject","getLatestApiVersion","then","latestApiVersion","mapPromise","getLeagueObject","summonerPromise","championPromise","runesPerksPromise","fullPerkPromise","getLeagueFullPerksObject","profileIconPromise","all","data","mapObj","summonerObj","championObj","runesPerksObj","fullPerkObj","profileIconObj","getByKey","createFindByFunction","idValue","objs","Object","values","find","c","id","teamObj","catch","keyNameToFindBy","key","Array","isArray","foundObjects","i","length","push","findBy","propertyArray","keyToFind","foundSummonerObj","url","transformURL","leagueObject","tryToResolveImport","makeAnHTTPSCall","objectJSONUrl","prefixURL","apiVersion","replace","importUrl","result","e","Error","code","console","log"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,eAAD,CAArB;;AACA,MAAMC,eAAe,GAAG,uDAAxB;AACA,MAAMC,UAAU,GAAG,yCAAnB;AACA,MAAMC,QAAQ,GAAG,GAAjB;AAEA,MAAMC,UAAU,GAAG,wCAAnB;AACA,MAAMC,eAAe,GAAG,6CAAxB;AACA,MAAMC,eAAe,GAAG,6CAAxB;AACA,MAAMC,YAAY,GAAG,kDAArB;AACA,MAAMC,cAAc,GAAG,gDAAvB,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG,kGAAzB;AACA,MAAMC,YAAY,GAAG,8CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,sBAAT,GACjB;AACC,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EACnB;AACCC,IAAAA,mBAAmB,GAAGC,IAAtB,CAA2B,UAASC,gBAAT,EAA2B;AACrD,YAAMC,UAAU,GAAGC,eAAe,CAACF,gBAAD,EAAmBf,UAAnB,CAAlC;AACA,YAAMkB,eAAe,GAAGD,eAAe,CAACF,gBAAD,EAAmBd,eAAnB,CAAvC;AACA,YAAMkB,eAAe,GAAGF,eAAe,CAACF,gBAAD,EAAmBb,eAAnB,CAAvC;AACA,YAAMkB,iBAAiB,GAAGH,eAAe,CAACF,gBAAD,EAAmBZ,YAAnB,CAAzC;AACA,YAAMkB,eAAe,GAAGC,wBAAwB,CAACP,gBAAD,CAAhD;AACG,YAAMQ,kBAAkB,GAAGN,eAAe,CAACF,gBAAD,EAAmBX,cAAnB,CAA1C;AAEAM,MAAAA,OAAO,CAACc,GAAR,CAAY,CAACR,UAAD,EAAaE,eAAb,EAA8BC,eAA9B,EAA+CC,iBAA/C,EAAkEC,eAAlE,EAAmFE,kBAAnF,CAAZ,EAAoHT,IAApH,CAAyH,UAASW,IAAT,EAAe;AACtI,cAAMC,MAAM,GAAGD,IAAI,CAAC,CAAD,CAAnB;AACA,cAAME,WAAW,GAAGF,IAAI,CAAC,CAAD,CAAxB;AACA,cAAMG,WAAW,GAAGH,IAAI,CAAC,CAAD,CAAxB;AACA,cAAMI,aAAa,GAAGJ,IAAI,CAAC,CAAD,CAA1B;AACA,cAAMK,WAAW,GAAGL,IAAI,CAAC,CAAD,CAAxB;AACA,cAAMM,cAAc,GAAGN,IAAI,CAAC,CAAD,CAA3B;AAEAC,QAAAA,MAAM,CAACM,QAAP,GAAkBC,oBAAoB,CAAC,OAAD,CAAtC;AACAN,QAAAA,WAAW,CAACK,QAAZ,GAAuBC,oBAAoB,CAAC,KAAD,CAA3C;AACHL,QAAAA,WAAW,CAACI,QAAZ,GAAuBC,oBAAoB,CAAC,KAAD,CAA3C;;AACGJ,QAAAA,aAAa,CAACG,QAAd,GAAyB,UAASE,OAAT,EAAkB;AAAE,cAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAX;AAAgC,iBAAOD,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoBG,IAApB,CAAyBC,CAAC,IAAI;AAAC,mBAAOA,CAAC,CAAC,IAAD,CAAD,IAAWL,OAAlB;AAA0B,WAAzD,CAAP;AAAoE,SAAjJ;;AACHJ,QAAAA,WAAW,CAACE,QAAZ,GAAuBC,oBAAoB,CAAC,IAAD,CAA3C;;AACGF,QAAAA,cAAc,CAACC,QAAf,GAA0B,UAASQ,EAAT,EAAa;AAAE,iBAAOT,cAAc,CAACS,EAAD,CAArB;AAA4B,SAArE;;AAEA,cAAMC,OAAO,GAAG;AAAC,iBAAO,KAAR;AAAe,iBAAO;AAAtB,SAAhB;;AACAA,QAAAA,OAAO,CAACT,QAAR,GAAmB,SAASA,QAAT,CAAkBQ,EAAlB,EAAsB;AAAE,cAAIA,EAAE,IAAI,KAAV,EAAiB,OAAO,KAAP,CAAjB,KAAoC,IAAIA,EAAE,IAAI,GAAV,EAAe,OAAO,MAAP;AAAgB,SAA9G;;AAEA7B,QAAAA,OAAO,CAAC;AAAC,iBAAOe,MAAR;AAAgB,sBAAYC,WAA5B;AAAyC,sBAAYC,WAArD;AAAkE,kBAAQa,OAA1E;AACN,yBAAgBV,cADV;AAC0B,mBAASF,aADnC;AACkD,uBAAaC;AAD/D,SAAD,CAAP;AAED,OApBD;AAqBH,KA7BD,EA8BCY,KA9BD,CA8BO9B,MA9BP;AA+BA,GAjCM,CAAP;AAkCA,CApCD,C,CAsCA;;;AACA,SAASqB,oBAAT,CAA8BU,eAA9B,EACA;AACC,SAAO,UAASC,GAAT,EACP;AACG,UAAMT,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAb;;AACA,QAAIQ,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EACA;AACE,YAAMG,YAAY,GAAG,EAArB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAACK,MAAxB,EAAgCD,CAAC,EAAjC,EACA;AACED,QAAAA,YAAY,CAACG,IAAb,CAAkBC,MAAM,CAAChB,IAAD,EAAOQ,eAAP,EAAwBC,GAAG,CAACI,CAAD,CAA3B,CAAxB;AACD;;AAED,aAAOD,YAAP;AACD;;AAED,WAAOI,MAAM,CAAChB,IAAD,EAAOQ,eAAP,EAAwBC,GAAxB,CAAb;AACD,GAhBF;AAiBA;;AAED,SAASO,MAAT,CAAgBC,aAAhB,EAA+BT,eAA/B,EAAgDU,SAAhD,EACA;AACC,MAAIC,gBAAJ;;AACA,OAAK,IAAIN,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACI,aAAa,CAACH,MAA9B,EAAsCD,CAAC,EAAvC,EACA;AACCM,IAAAA,gBAAgB,GAAGlB,MAAM,CAACC,MAAP,CAAce,aAAa,CAACJ,CAAD,CAA3B,EAAgCV,IAAhC,CAAqCC,CAAC,IAAI;AAAC,aAAOA,CAAC,CAACI,eAAD,CAAD,IAAsBU,SAA7B;AAAuC,KAAlF,CAAnB,CADD,CAEG;;AACA,QAAI,CAACC,gBAAD,IAAqBF,aAAa,CAACJ,CAAD,CAAb,CAAiBL,eAAjB,KAAqCU,SAA9D,EAAyE;AACvEC,MAAAA,gBAAgB,GAAGF,aAAa,CAACJ,CAAD,CAAhC;AACD;;AAEH,QAAIM,gBAAJ,EACA;AACC;AACA;AACD;;AAED,SAAOA,gBAAP;AACA,C,CAED;;;AACA,SAAShC,wBAAT,CAAkCP,gBAAlC,EACA;AACE,SAAO,IAAIL,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3C,QAAI2C,GAAG,GAAGC,YAAY,CAAClD,YAAD,EAAeP,QAAf,EAAyBgB,gBAAzB,CAAtB;AACA,QAAI0C,YAAY,GAAGC,kBAAkB,CAACH,GAAD,CAArC;;AAEA,QAAI,CAACE,YAAL,EACA;AACE9D,MAAAA,KAAK,CAACgE,eAAN,CAAsBtD,gBAAtB,EAAwCS,IAAxC,CAA6C,UAASW,IAAT,EAAe;AAC1Dd,QAAAA,OAAO,CAACc,IAAD,CAAP;AACD,OAFD;AAGD,KALD,MAOA;AACEd,MAAAA,OAAO,CAAC8C,YAAD,CAAP;AACD;AACF,GAdM,CAAP;AAeD;;AAED,SAASxC,eAAT,CAAyBF,gBAAzB,EAA2C6C,aAA3C,EACA;AACE,SAAO,IAAIlD,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3C,QAAI2C,GAAG,GAAGC,YAAY,CAACI,aAAD,EAAgB7D,QAAhB,EAA0BgB,gBAA1B,CAAtB;AACA,QAAI0C,YAAY,GAAGC,kBAAkB,CAACH,GAAD,CAArC,CAF2C,CAI3C;;AACA,QAAI,CAACE,YAAL,EACA;AACEF,MAAAA,GAAG,GAAGC,YAAY,CAACI,aAAD,EAAgB9D,UAAhB,EAA4BiB,gBAA5B,CAAlB;AACApB,MAAAA,KAAK,CAACgE,eAAN,CAAsBJ,GAAtB,EAA2BzC,IAA3B,CAAgC,UAASW,IAAT,EAAe;AAC7Cd,QAAAA,OAAO,CAACc,IAAD,CAAP;AACD,OAFD,EAEGiB,KAFH,CAES9B,MAFT;AAGD,KAND,MAQA;AACED,MAAAA,OAAO,CAAC8C,YAAD,CAAP;AACD;AACF,GAhBM,CAAP;AAiBD;AAED;;;;;AAGA,SAAS5C,mBAAT,GACA;AACC,SAAO,IAAIH,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC5CjB,IAAAA,KAAK,CAACgE,eAAN,CAAsB9D,eAAtB,EACCiB,IADD,CACM,UAASW,IAAT,EAAe;AACpBd,MAAAA,OAAO,CAACc,IAAI,CAAC,CAAD,CAAL,CAAP;AACA,KAHD,EAICiB,KAJD,CAIO9B,MAJP;AAKA,GANM,CAAP;AAOA;AAED;;;;;AAGA,SAAS4C,YAAT,CAAsBD,GAAtB,EAA2BM,SAA3B,EAAsCC,UAAtC,EACA;AACC,SAAOP,GAAG,CAACQ,OAAJ,CAAY,OAAZ,EAAqBF,SAArB,EAAgCE,OAAhC,CAAwC,cAAxC,EAAwDD,UAAxD,CAAP;AACA;AAED;;;;;AAGA,SAASJ,kBAAT,CAA4BM,SAA5B,EACA;AACC,MAAIC,MAAJ;;AAEA,MACA;AACCA,IAAAA,MAAM,GAAGrE,OAAO,CAACoE,SAAD,CAAhB;AACA,GAHD,CAIA,OAAOE,CAAP,EACA;AACC,QAAIA,CAAC,YAAYC,KAAb,IAAsBD,CAAC,CAACE,IAAF,KAAW,kBAArC,EACA;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCN,SAA9C;AACA,KAHD,MAKA;AACC,YAAME,CAAN;AACA;AACD;;AAED,SAAOD,MAAP;AACA","sourcesContent":["const https = require('./HttpsCaller');\r\nconst GET_VERSION_URL = 'https://ddragon.leagueoflegends.com/api/versions.json';\r\nconst ddragonURL = 'https://ddragon.leagueoflegends.com/cdn';\r\nconst localURL = '.';\r\n\r\nconst mapJsonURI = '%url%/%apiversion%/data/en_US/map.json';\r\nconst summonerJsonURI = '%url%/%apiversion%/data/en_US/summoner.json';\r\nconst championJsonURI = '%url%/%apiversion%/data/en_US/champion.json';\r\nconst runesJsonURI = '%url%/%apiversion%/data/en_US/runesReforged.json';\r\nconst profileIconURI = '%url%/%apiversion%/data/en_US/profileicon.json';\r\n\r\n// There is no official endpoint for the stat modifiers.\r\nconst unofficalPerkURI = 'https://raw.communitydragon.org/latest/plugins/rcp-be-lol-game-data/global/default/v1/perks.json'\r\nconst localPerkURI = '%url%/%apiversion%/data/en_US/perksFull.json';\r\n\r\nmodule.exports = function getClassesDataFromJSON()\r\n{\r\n\treturn new Promise(function(resolve, reject)\r\n\t{\r\n\t\tgetLatestApiVersion().then(function(latestApiVersion) {\r\n\t\t\tconst mapPromise = getLeagueObject(latestApiVersion, mapJsonURI);\r\n\t\t\tconst summonerPromise = getLeagueObject(latestApiVersion, summonerJsonURI);\r\n\t\t\tconst championPromise = getLeagueObject(latestApiVersion, championJsonURI);\r\n\t\t\tconst runesPerksPromise = getLeagueObject(latestApiVersion, runesJsonURI);\r\n\t\t\tconst fullPerkPromise = getLeagueFullPerksObject(latestApiVersion);\r\n      const profileIconPromise = getLeagueObject(latestApiVersion, profileIconURI);\r\n\r\n      Promise.all([mapPromise, summonerPromise, championPromise, runesPerksPromise, fullPerkPromise, profileIconPromise]).then(function(data) {\r\n        const mapObj = data[0];\r\n        const summonerObj = data[1];\r\n        const championObj = data[2];\r\n        const runesPerksObj = data[3];\r\n        const fullPerkObj = data[4];\r\n        const profileIconObj = data[5];\r\n\r\n        mapObj.getByKey = createFindByFunction('MapId');\r\n        summonerObj.getByKey = createFindByFunction('key');\r\n\t\t\t  championObj.getByKey = createFindByFunction('key');\r\n        runesPerksObj.getByKey = function(idValue) { let objs = Object.values(this); return Object.values(objs).find(c => {return c['id'] == idValue});\t}\r\n\t\t\t  fullPerkObj.getByKey = createFindByFunction('id');\r\n        profileIconObj.getByKey = function(id) { return profileIconObj[id]; };\r\n\r\n        const teamObj = {'200': 'red', '100': 'blue'};\r\n        teamObj.getByKey = function getByKey(id) { if (id == '200') return 'red'; else if (id == 100) return 'blue'; };\r\n\r\n        resolve({'map': mapObj, 'summoner': summonerObj, 'champion': championObj, 'team': teamObj,\r\n          'profileIcon' : profileIconObj, 'runes': runesPerksObj, 'fullPerks': fullPerkObj});\r\n      });\r\n\t\t})\r\n\t\t.catch(reject);\r\n\t});\r\n};\r\n\r\n// TODO: Faster way would be to keep an Array, and get by the index instead of invoking Object.values() every time.\r\nfunction createFindByFunction(keyNameToFindBy)\r\n{\r\n\treturn function(key)\r\n\t{\r\n    const objs = Object.values(this);\r\n    if (Array.isArray(key))\r\n    {\r\n      const foundObjects = [];\r\n      \r\n      for (let i = 0; i < key.length; i++)\r\n      {\r\n        foundObjects.push(findBy(objs, keyNameToFindBy, key[i]));\r\n      }\r\n      \r\n      return foundObjects;\r\n    }\r\n    \r\n    return findBy(objs, keyNameToFindBy, key);\r\n  }\r\n}\r\n\r\nfunction findBy(propertyArray, keyNameToFindBy, keyToFind)\r\n{\r\n\tlet foundSummonerObj;\r\n\tfor (var i=0; i<propertyArray.length; i++)\r\n\t{\r\n\t\tfoundSummonerObj = Object.values(propertyArray[i]).find(c => {return c[keyNameToFindBy] == keyToFind});\r\n    // perks work differently\r\n    if (!foundSummonerObj && propertyArray[i][keyNameToFindBy] == keyToFind) {\r\n      foundSummonerObj = propertyArray[i];\r\n    }\r\n    \r\n\t\tif (foundSummonerObj)\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n  \r\n\treturn foundSummonerObj;\r\n}\r\n\r\n// Full perk information is special since there is no official API for it.\r\nfunction getLeagueFullPerksObject(latestApiVersion)\r\n{\r\n  return new Promise(function(resolve, reject) {\r\n    let url = transformURL(localPerkURI, localURL, latestApiVersion);\r\n    let leagueObject = tryToResolveImport(url);\r\n    \r\n    if (!leagueObject)\r\n    {\r\n      https.makeAnHTTPSCall(unofficalPerkURI).then(function(data) {\r\n        resolve(data);\r\n      });\r\n    }\r\n    else\r\n    {\r\n      resolve(leagueObject);\r\n    }\r\n  });\r\n}\r\n\r\nfunction getLeagueObject(latestApiVersion, objectJSONUrl)\r\n{\r\n  return new Promise(function(resolve, reject) {\r\n    let url = transformURL(objectJSONUrl, localURL, latestApiVersion);\r\n    let leagueObject = tryToResolveImport(url);\r\n    \r\n    // Object could not be resolved. E.G we don't have the files for the latest version\r\n    if (!leagueObject)\r\n    {\r\n      url = transformURL(objectJSONUrl, ddragonURL, latestApiVersion);\r\n      https.makeAnHTTPSCall(url).then(function(data) {\r\n        resolve(data);\r\n      }).catch(reject);\r\n    } \r\n    else \r\n    {\r\n      resolve(leagueObject);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Gets latest api version based on the get version url. E.G 9.9.1\r\n*/\r\nfunction getLatestApiVersion()\r\n{\r\n\treturn new Promise(function(resolve, reject) {\r\n\t\thttps.makeAnHTTPSCall(GET_VERSION_URL)\r\n\t\t.then(function(data) {\r\n\t\t\tresolve(data[0]);\r\n\t\t})\r\n\t\t.catch(reject);\r\n\t});\r\n}\r\n\r\n/**\r\n * replaces '%url%' and '%apiversion%' with the paramaters passed\r\n*/\r\nfunction transformURL(url, prefixURL, apiVersion)\r\n{\r\n\treturn url.replace('%url%', prefixURL).replace('%apiversion%', apiVersion);\r\n}\r\n\r\n/**\r\n * Given the import URL, tries to 'require()' it. If Module is not found, returns null/undefined.\r\n*/\r\nfunction tryToResolveImport(importUrl)\r\n{\r\n\tlet result;\r\n\t\r\n\ttry \r\n\t{\r\n\t\tresult = require(importUrl);\r\n\t}\r\n\tcatch (e) \r\n\t{\r\n\t\tif (e instanceof Error && e.code === \"MODULE_NOT_FOUND\")\r\n\t\t{\r\n\t\t\tconsole.log(\"WARNING: Cannot load import: \" + importUrl);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn result;\r\n}"]},"metadata":{},"sourceType":"script"}