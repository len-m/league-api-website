{"ast":null,"code":"var _jsxFileName = \"C:\\\\website\\\\client\\\\src\\\\App\\\\pages\\\\league-of-legends\\\\LeaguePlayerDetails.js\";\nimport React, { useEffect, useState } from 'react';\nimport './LeaguePlayerDetails.css';\nimport { getRank } from './LeagueOfLegendsApi.js';\n/**\r\n * League player details\r\n */\n\nfunction LeaguePlayerDetails(props) {\n  const [player, setPlayer] = useState({});\n  useEffect(() => {\n    const fetchPlayer = async () => {\n      const fetchedPlayer = await fetch(\"http://localhost:3001/api/league-of-legends/players/\" + props.match.params.player).then(res => res.json());\n      var player = {};\n      player.leagueName = fetchedPlayer.summonerInfo.name;\n      player.level = fetchedPlayer.summonerInfo.summonerLevel;\n      player.IconIdSrc = `//opgg-static.akamaized.net/images/profile_icons/profileIcon${fetchedPlayer.summonerInfo.profileIconId}.jpg?image=q_auto&v=1518361200`;\n      player.soloDuoRank = await getRank(fetchedPlayer.leagueInfo, \"RANKED_SOLO_5x5\");\n      player.flexRank = await getRank(fetchedPlayer.leagueInfo, \"RANKED_FLEX_SR\");\n      player.soloDuoRankSrc = `//opgg-static.akamaized.net/images/medals/${player.soloDuoRank}.png?image=q_auto&v=1`;\n      player.flexRankSrc = `//opgg-static.akamaized.net/images/medals/${player.flexRank}.png?image=q_auto&v=1`;\n      const matchList = fetchedPlayer.matchHistory.matches.slice(0, 10);\n      console.log(matchList.length);\n      let matches = [];\n\n      for (var i = 0; i < matchList.length; i++) {\n        const rawJsonMatch = await fetch(\"http://localhost:3001/api/league-of-legends/match/\" + matchList[i].gameId).then(res => res.json());\n        let match = {};\n        match.gameId = rawJsonMatch.matchInfo.gameId; //loop through all pariticpants, check if current participant == player\n\n        for (var j = 0; j < rawJsonMatch.matchInfo.participantIdentities.length; j++) {\n          const participant = rawJsonMatch.matchInfo.participantIdentities[j];\n\n          if (participant.player.summonerName === player.leagueName) {\n            match.win = rawJsonMatch.matchInfo.participants[j].stats.win;\n\n            if (match.win === true) {\n              match.winColor = \"rgb(255, 77, 77)\";\n            } else {\n              match.winColor = \"rgb(2, 77, 77)\";\n            }\n\n            match.kills = rawJsonMatch.matchInfo.participants[j].stats.kills;\n            match.deaths = rawJsonMatch.matchInfo.participants[j].stats.deaths;\n            match.assists = rawJsonMatch.matchInfo.participants[j].stats.assists;\n            break;\n          }\n        }\n\n        matches[i] = match;\n        console.log(rawJsonMatch);\n        console.log(matches[i]);\n      }\n\n      player.matchList = matches;\n      setPlayer(JSON.parse(JSON.stringify(player)));\n    };\n\n    fetchPlayer();\n  }, [props.match.params.player]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-player-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-picture-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"profile-pictrue\",\n    src: player.IconIdSrc,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-name-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"player-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, player.leagueName), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"player-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"Level: \", player.level)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rank-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"solo-duo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }\n  }, \"Solo Duo:\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"rank-picture\",\n    src: player.soloDuoRankSrc,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Flex:\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"rank-picture\",\n    src: player.flexRankSrc,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"matchlist-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, player.matchList && player.matchList.map(match => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"match-container\",\n    key: `${match.gameId}match-container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"win-loose-indicator-container\",\n    key: `${match.gameId}win-loose-indicator-container`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"win-loose-indicator\",\n    style: \"`background-color: red`\",\n    key: `${match.gameId}win-loose-indicator`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }))))))));\n}\n\nexport default LeaguePlayerDetails;","map":{"version":3,"sources":["C:/website/client/src/App/pages/league-of-legends/LeaguePlayerDetails.js"],"names":["React","useEffect","useState","getRank","LeaguePlayerDetails","props","player","setPlayer","fetchPlayer","fetchedPlayer","fetch","match","params","then","res","json","leagueName","summonerInfo","name","level","summonerLevel","IconIdSrc","profileIconId","soloDuoRank","leagueInfo","flexRank","soloDuoRankSrc","flexRankSrc","matchList","matchHistory","matches","slice","console","log","length","i","rawJsonMatch","gameId","matchInfo","j","participantIdentities","participant","summonerName","win","participants","stats","winColor","kills","deaths","assists","JSON","parse","stringify","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './LeaguePlayerDetails.css';\r\nimport {getRank} from './LeagueOfLegendsApi.js';\r\n/**\r\n * League player details\r\n */\r\nfunction LeaguePlayerDetails(props) {\r\n  const [player, setPlayer] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchPlayer = async () => {\r\n      const fetchedPlayer = await fetch(\"http://localhost:3001/api/league-of-legends/players/\" + props.match.params.player).then(res => res.json());\r\n      var player = {};\r\n      player.leagueName = fetchedPlayer.summonerInfo.name;\r\n      player.level = fetchedPlayer.summonerInfo.summonerLevel;\r\n      player.IconIdSrc = `//opgg-static.akamaized.net/images/profile_icons/profileIcon${fetchedPlayer.summonerInfo.profileIconId}.jpg?image=q_auto&v=1518361200`;\r\n      player.soloDuoRank = await getRank(fetchedPlayer.leagueInfo, \"RANKED_SOLO_5x5\");\r\n      player.flexRank = await getRank(fetchedPlayer.leagueInfo, \"RANKED_FLEX_SR\");\r\n      player.soloDuoRankSrc = `//opgg-static.akamaized.net/images/medals/${player.soloDuoRank}.png?image=q_auto&v=1`;\r\n      player.flexRankSrc = `//opgg-static.akamaized.net/images/medals/${player.flexRank}.png?image=q_auto&v=1`;\r\n      \r\n      const matchList = fetchedPlayer.matchHistory.matches.slice(0, 10);\r\n      console.log(matchList.length);\r\n      \r\n      let matches = [];\r\n      for (var i = 0; i < matchList.length; i++) {\r\n        const rawJsonMatch = await fetch(\"http://localhost:3001/api/league-of-legends/match/\" + matchList[i].gameId).then(res => res.json());\r\n        let match = {};\r\n        match.gameId = rawJsonMatch.matchInfo.gameId;\r\n        //loop through all pariticpants, check if current participant == player\r\n        for (var j = 0; j < rawJsonMatch.matchInfo.participantIdentities.length; j++) {\r\n          const participant = rawJsonMatch.matchInfo.participantIdentities[j];\r\n          if (participant.player.summonerName === player.leagueName) {\r\n            match.win = rawJsonMatch.matchInfo.participants[j].stats.win;\r\n            if (match.win === true) {\r\n              match.winColor = \"rgb(255, 77, 77)\";\r\n            } else {\r\n              match.winColor = \"rgb(2, 77, 77)\";\r\n            }\r\n            match.kills = rawJsonMatch.matchInfo.participants[j].stats.kills;\r\n            match.deaths = rawJsonMatch.matchInfo.participants[j].stats.deaths;\r\n            match.assists = rawJsonMatch.matchInfo.participants[j].stats.assists;\r\n            break;\r\n          }\r\n        }\r\n        matches[i] = match;\r\n\r\n        console.log(rawJsonMatch);\r\n        console.log(matches[i]);\r\n      }\r\n      player.matchList = matches;\r\n      setPlayer(JSON.parse(JSON.stringify(player)));\r\n    }\r\n    fetchPlayer();\r\n  }, [props.match.params.player]);\r\n\r\n  return (\r\n    <div className=\"league-player-details-container\">\r\n      <div className=\"player-container\">\r\n        <div className=\"header-container\">\r\n          <div className=\"profile-picture-container\">\r\n            <img className=\"profile-pictrue\" src={player.IconIdSrc} alt=\"\"></img>\r\n          </div>\r\n          <div className=\"player-name-container\">\r\n            <h1 className=\"player-name\">{player.leagueName}</h1>\r\n            <h1 className=\"player-name\">Level: {player.level}</h1>\r\n          </div>\r\n          <div className=\"rank-container\">\r\n            <div className=\"solo-duo-container\">\r\n          \t  <h1>Solo Duo:</h1>\r\n              <img className=\"rank-picture\" src={player.soloDuoRankSrc} alt=\"\"></img>\r\n            </div>\r\n            <div className=\"flex-container\">\r\n              <h1>Flex:</h1>\r\n              <img className=\"rank-picture\" src={player.flexRankSrc} alt=\"\"></img>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"body-container\">\r\n          <div className=\"matchlist-container\">\r\n            {\r\n              player.matchList && player.matchList.map(match => \r\n                <div className=\"match-container\" key={`${match.gameId}match-container`}>\r\n                  <div className=\"win-loose-indicator-container\" key={`${match.gameId}win-loose-indicator-container`}>\r\n                    <div className=\"win-loose-indicator\" style={\"`background-color: red`\"} key={`${match.gameId}win-loose-indicator`} />\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeaguePlayerDetails;"]},"metadata":{},"sourceType":"module"}