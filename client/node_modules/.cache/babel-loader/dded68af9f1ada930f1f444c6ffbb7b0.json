{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst request_promise_1 = __importDefault(require(\"request-promise\"));\n\nconst dataDragon_1 = require(\"../../../constants/dataDragon\");\n\nconst champions_1 = require(\"../../../constants/champions\");\n\nconst defaultLang = 'en_US';\n/**\n * Data Dragon is our way of centralizing League of Legends game data and assets, including champions, items, runes, summoner spells, and profile icons. All of which can be used by third-party developers. You can download a gzipped tar file (.tar.gz) for each patch which will contain all assets for that patch.\n * https://ddragon.Lol.com/cdn/dragontail-9.20.1.tgz\n * Please be aware that updating Data Dragon after each League of Legends patch is a manual process, so it is not always updated immediately after a patch. Your patience is appreciated.\n */\n\nclass DataDragonService {\n  // Internal methods\n  request(path, base = dataDragon_1.DataDragonEnum.BASE) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const options = {\n        uri: `${base}/${path}`,\n        method: 'GET',\n        json: true\n      };\n      return request_promise_1.default(options);\n    });\n  } // Riot requests\n  // Data dragon\n\n\n  getRealms(server) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const path = `realms/${server}.json`;\n      return this.request(path);\n    });\n  }\n\n  getVersions() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const path = 'api/versions.json';\n      return this.request(path);\n    });\n  }\n\n  getLanguages() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const path = 'cdn/languages.json';\n      return this.request(path);\n    });\n  }\n  /**\n   * Runes reforged (perks)\n   */\n\n\n  getRunesReforged() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const version = (yield this.getVersions())[0];\n      const path = `cdn/${version}/data/${defaultLang}/runesReforged.json`;\n      return this.request(path);\n    });\n  }\n\n  getChampion(champ) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const version = (yield this.getVersions())[0];\n      let champName = '';\n      let path = `cdn/${version}/data/${defaultLang}/champion`;\n\n      if (champ) {\n        champName = champions_1.getChampionNameCapital(champ);\n        path += `/${champName}.json`;\n      } else {\n        path += '.json';\n      }\n\n      const fullResponse = yield this.request(path);\n\n      if (champ) {\n        const response = fullResponse.data[champName];\n        return response;\n      }\n\n      return fullResponse;\n    });\n  } // Static data\n\n\n  getQueues() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const path = 'docs/lol/queues.json';\n      return this.request(path, dataDragon_1.DataDragonEnum.STATIC);\n    });\n  }\n\n  getSeasons() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const path = 'docs/lol/seasons.json';\n      return this.request(path, dataDragon_1.DataDragonEnum.STATIC);\n    });\n  }\n\n  getMaps() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const path = 'docs/lol/maps.json';\n      return this.request(path, dataDragon_1.DataDragonEnum.STATIC);\n    });\n  }\n\n  getGameModes() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const path = 'docs/lol/gameModes.json';\n      return this.request(path, dataDragon_1.DataDragonEnum.STATIC);\n    });\n  }\n\n  getGameTypes() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const path = 'docs/lol/gameTypes.json';\n      return this.request(path, dataDragon_1.DataDragonEnum.STATIC);\n    });\n  }\n\n}\n\nexports.DataDragonService = DataDragonService;","map":{"version":3,"sources":["C:/website/node_modules/twisted/dist/apis/lol/dataDragon/DataDragonService.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","request_promise_1","require","dataDragon_1","champions_1","defaultLang","DataDragonService","request","path","base","DataDragonEnum","BASE","options","uri","method","json","default","getRealms","server","getVersions","getLanguages","getRunesReforged","version","getChampion","champ","champName","getChampionNameCapital","fullResponse","response","data","getQueues","STATIC","getSeasons","getMaps","getGameModes","getGameTypes"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst request_promise_1 = __importDefault(require(\"request-promise\"));\nconst dataDragon_1 = require(\"../../../constants/dataDragon\");\nconst champions_1 = require(\"../../../constants/champions\");\nconst defaultLang = 'en_US';\n/**\n * Data Dragon is our way of centralizing League of Legends game data and assets, including champions, items, runes, summoner spells, and profile icons. All of which can be used by third-party developers. You can download a gzipped tar file (.tar.gz) for each patch which will contain all assets for that patch.\n * https://ddragon.Lol.com/cdn/dragontail-9.20.1.tgz\n * Please be aware that updating Data Dragon after each League of Legends patch is a manual process, so it is not always updated immediately after a patch. Your patience is appreciated.\n */\nclass DataDragonService {\n    // Internal methods\n    request(path, base = dataDragon_1.DataDragonEnum.BASE) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = {\n                uri: `${base}/${path}`,\n                method: 'GET',\n                json: true\n            };\n            return request_promise_1.default(options);\n        });\n    }\n    // Riot requests\n    // Data dragon\n    getRealms(server) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = `realms/${server}.json`;\n            return this.request(path);\n        });\n    }\n    getVersions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = 'api/versions.json';\n            return this.request(path);\n        });\n    }\n    getLanguages() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = 'cdn/languages.json';\n            return this.request(path);\n        });\n    }\n    /**\n     * Runes reforged (perks)\n     */\n    getRunesReforged() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const version = (yield this.getVersions())[0];\n            const path = `cdn/${version}/data/${defaultLang}/runesReforged.json`;\n            return this.request(path);\n        });\n    }\n    getChampion(champ) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const version = (yield this.getVersions())[0];\n            let champName = '';\n            let path = `cdn/${version}/data/${defaultLang}/champion`;\n            if (champ) {\n                champName = champions_1.getChampionNameCapital(champ);\n                path += `/${champName}.json`;\n            }\n            else {\n                path += '.json';\n            }\n            const fullResponse = yield this.request(path);\n            if (champ) {\n                const response = fullResponse.data[champName];\n                return response;\n            }\n            return fullResponse;\n        });\n    }\n    // Static data\n    getQueues() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = 'docs/lol/queues.json';\n            return this.request(path, dataDragon_1.DataDragonEnum.STATIC);\n        });\n    }\n    getSeasons() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = 'docs/lol/seasons.json';\n            return this.request(path, dataDragon_1.DataDragonEnum.STATIC);\n        });\n    }\n    getMaps() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = 'docs/lol/maps.json';\n            return this.request(path, dataDragon_1.DataDragonEnum.STATIC);\n        });\n    }\n    getGameModes() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = 'docs/lol/gameModes.json';\n            return this.request(path, dataDragon_1.DataDragonEnum.STATIC);\n        });\n    }\n    getGameTypes() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = 'docs/lol/gameTypes.json';\n            return this.request(path, dataDragon_1.DataDragonEnum.STATIC);\n        });\n    }\n}\nexports.DataDragonService = DataDragonService;\n"]},"metadata":{},"sourceType":"script"}