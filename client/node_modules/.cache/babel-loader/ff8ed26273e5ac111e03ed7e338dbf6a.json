{"ast":null,"code":"var _jsxFileName = \"C:\\\\website\\\\client\\\\src\\\\App\\\\pages\\\\myslibros\\\\LeagueProfile.js\";\nimport { raw } from 'body-parser'; //TODO: own css for myslibros page\n\nimport React, { useEffect, useState } from 'react';\nimport '../../App.css'; //import {getPlayerIconPNGLink, getPlayerLevel, getFlexRank, get_Solo_Duo_Rank} from './LeagueOfLegendsApi.js';\n\n/**\r\n * League player profile for Myslibros\r\n */\n\nfunction LeagueProfile(props) {\n  const [player, setPlayer] = useState({});\n\n  const getRequest = async url => {\n    const data = fetch(url).then(res => res.json());\n    return data;\n  };\n\n  useEffect(() => {\n    fecthPlayer();\n  }, []);\n\n  const getArabicNumber = async romanNumber => {\n    switch (romanNumber) {\n      case \"IV\":\n        return \"4\";\n\n      case \"III\":\n        return \"3\";\n\n      case \"II\":\n        return \"2\";\n\n      case \"I\":\n        return \"1\";\n\n      default:\n        return \"unknown\";\n    }\n  };\n  /* const getRank = async (leagueData, rankType) => {\r\n       for (let i = 0; i < Object.keys(leagueData.adrray).length; i++) {\r\n           if (leagueData[i] !== undefined && leagueData[i])\r\n         }\r\n  \n  \n   } \r\n   export async function get_Solo_Duo_Rank(player) {\r\n       const summonerInfo = await getSummonerJSON(player);\r\n       const json = await getLeagueJSON(summonerInfo.id);\r\n       if (json[1] !== undefined && json[1].queueType === \"RANKED_SOLO_5x5\") {\r\n           const arabicNumber = await getArabicNumber(json[1].rank);\r\n           return `${json[1].tier.toLowerCase()}_${arabicNumber}`;\r\n       } else  if (json[0] !== undefined && json[0].queueType === \"RANKED_SOLO_5x5\") {\r\n           const arabicNumber = await getArabicNumber(json[0].rank);\r\n           return `${json[0].tier.toLowerCase()}_${arabicNumber}`;\r\n       } else {\r\n           return \"default\";\r\n       }\r\n   }\r\n  */\n\n\n  const fecthPlayer = async () => {\n    const fetchedPlayer = await fetch(\"http://localhost:3001/api/leagueoflegends/players/\" + props.leagueName).then(res => res.json());\n    var player = {};\n    player.leagueName = fetchedPlayer.summonerInfo.name;\n    player.level = fetchedPlayer.summonerInfo.summonerLevel;\n    player.IconIdSrc = `//opgg-static.akamaized.net/images/profile_icons/profileIcon${fetchedPlayer.summonerInfo.profileIconId}.jpg?image=q_auto&v=1518361200`;\n    player.flexRank;\n    setPlayer(JSON.parse(JSON.stringify(player)));\n  };\n  /*const fetchPlayers = async () => {\r\n      var json = {};\r\n      json.name = props.leagueName;\r\n      json.level = fetch('/api/leagueoflegends/players')\r\n          .then(res => res.json())\r\n          .then(players => ) \r\n          \r\n          \r\n          //await getPlayerLevel(props.leagueName);\r\n      json.iconSrc = await getPlayerIconPNGLink(props.leagueName);\r\n      json.flexRank = await getFlexRank(props.leagueName);\r\n      json.soloDuoRank = await get_Solo_Duo_Rank(props.leagueName);\r\n      //json.lane = await getOverallLane(props.leagueName);\r\n      const player = JSON.parse(JSON.stringify(json));\r\n      setPlayer(player);\r\n    };*/\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-profile-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-profile-header-picture-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"league-profile-picture\",\n    src: player.IconIdSrc,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-profile-header-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, player.leagueName), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Level: \", player.level))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"league-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default LeagueProfile;","map":{"version":3,"sources":["C:/website/client/src/App/pages/myslibros/LeagueProfile.js"],"names":["raw","React","useEffect","useState","LeagueProfile","props","player","setPlayer","getRequest","url","data","fetch","then","res","json","fecthPlayer","getArabicNumber","romanNumber","fetchedPlayer","leagueName","summonerInfo","name","level","summonerLevel","IconIdSrc","profileIconId","flexRank","JSON","parse","stringify"],"mappings":";AAAA,SAASA,GAAT,QAAoB,aAApB,C,CACA;;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,eAAP,C,CACA;;AAEA;;;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMK,UAAU,GAAG,MAAOC,GAAP,IAAe;AAC9B,UAAMC,IAAI,GAAGC,KAAK,CAACF,GAAD,CAAL,CACZG,IADY,CACPC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADA,CAAb;AAEA,WAAOJ,IAAP;AACH,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,eAAe,GAAG,MAAOC,WAAP,IAAuB;AAC3C,YAAQA,WAAR;AACI,WAAK,IAAL;AACI,eAAO,GAAP;;AACJ,WAAK,KAAL;AACI,eAAO,GAAP;;AACJ,WAAK,IAAL;AACI,eAAO,GAAP;;AACJ,WAAK,GAAL;AACI,eAAO,GAAP;;AACJ;AACI,eAAO,SAAP;AAVR;AAYH,GAbD;AAeD;;;;;;;;;;;;;;;;;;;;;;;AAwBC,QAAMF,WAAW,GAAG,YAAY;AAC5B,UAAMG,aAAa,GAAG,MAAMP,KAAK,CAAC,uDAAuDN,KAAK,CAACc,UAA9D,CAAL,CAA+EP,IAA/E,CAAoFC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3F,CAA5B;AACA,QAAIR,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAACa,UAAP,GAAoBD,aAAa,CAACE,YAAd,CAA2BC,IAA/C;AACAf,IAAAA,MAAM,CAACgB,KAAP,GAAeJ,aAAa,CAACE,YAAd,CAA2BG,aAA1C;AACAjB,IAAAA,MAAM,CAACkB,SAAP,GAAoB,+DAA8DN,aAAa,CAACE,YAAd,CAA2BK,aAAc,gCAA3H;AACAnB,IAAAA,MAAM,CAACoB,QAAP;AAGAnB,IAAAA,SAAS,CAACoB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAevB,MAAf,CAAX,CAAD,CAAT;AACH,GAVD;AAaA;;;;;;;;;;;;;;;;;;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,GAAG,EAAEA,MAAM,CAACkB,SAApD;AAA+D,IAAA,GAAG,EAAC,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,MAAM,CAACa,UAAZ,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYb,MAAM,CAACgB,KAAnB,CAFJ,CAJJ,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAqBH;;AAED,eAAelB,aAAf","sourcesContent":["import { raw } from 'body-parser';\r\n//TODO: own css for myslibros page\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../../App.css';\r\n//import {getPlayerIconPNGLink, getPlayerLevel, getFlexRank, get_Solo_Duo_Rank} from './LeagueOfLegendsApi.js';\r\n\r\n/**\r\n * League player profile for Myslibros\r\n */\r\nfunction LeagueProfile(props) {\r\n    const [player, setPlayer] = useState({});\r\n    \r\n    const getRequest = async (url) => {\r\n        const data = fetch(url)\r\n        .then(res => res.json());\r\n        return data;\r\n    }\r\n    \r\n    useEffect(() => {\r\n        fecthPlayer();\r\n    }, []);\r\n        \r\n    const getArabicNumber = async (romanNumber) => {\r\n        switch (romanNumber) {\r\n            case \"IV\":\r\n                return \"4\";\r\n            case \"III\":\r\n                return \"3\";\r\n            case \"II\":\r\n                return \"2\";\r\n            case \"I\":\r\n                return \"1\";\r\n            default:\r\n                return \"unknown\";\r\n        }\r\n    }\r\n\r\n   /* const getRank = async (leagueData, rankType) => {\r\n        for (let i = 0; i < Object.keys(leagueData.adrray).length; i++) {\r\n            if (leagueData[i] !== undefined && leagueData[i])\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    } \r\n    export async function get_Solo_Duo_Rank(player) {\r\n        const summonerInfo = await getSummonerJSON(player);\r\n        const json = await getLeagueJSON(summonerInfo.id);\r\n        if (json[1] !== undefined && json[1].queueType === \"RANKED_SOLO_5x5\") {\r\n            const arabicNumber = await getArabicNumber(json[1].rank);\r\n            return `${json[1].tier.toLowerCase()}_${arabicNumber}`;\r\n        } else  if (json[0] !== undefined && json[0].queueType === \"RANKED_SOLO_5x5\") {\r\n            const arabicNumber = await getArabicNumber(json[0].rank);\r\n            return `${json[0].tier.toLowerCase()}_${arabicNumber}`;\r\n        } else {\r\n            return \"default\";\r\n        }\r\n    }\r\n*/\r\n    const fecthPlayer = async () => {\r\n        const fetchedPlayer = await fetch(\"http://localhost:3001/api/leagueoflegends/players/\" + props.leagueName).then(res => res.json());\r\n        var player = {};\r\n        player.leagueName = fetchedPlayer.summonerInfo.name;\r\n        player.level = fetchedPlayer.summonerInfo.summonerLevel;\r\n        player.IconIdSrc = `//opgg-static.akamaized.net/images/profile_icons/profileIcon${fetchedPlayer.summonerInfo.profileIconId}.jpg?image=q_auto&v=1518361200`;\r\n        player.flexRank \r\n\r\n\r\n        setPlayer(JSON.parse(JSON.stringify(player)));\r\n    }\r\n        \r\n\r\n    /*const fetchPlayers = async () => {\r\n        var json = {};\r\n        json.name = props.leagueName;\r\n        json.level = fetch('/api/leagueoflegends/players')\r\n            .then(res => res.json())\r\n            .then(players => ) \r\n            \r\n            \r\n            //await getPlayerLevel(props.leagueName);\r\n        json.iconSrc = await getPlayerIconPNGLink(props.leagueName);\r\n        json.flexRank = await getFlexRank(props.leagueName);\r\n        json.soloDuoRank = await get_Solo_Duo_Rank(props.leagueName);\r\n        //json.lane = await getOverallLane(props.leagueName);\r\n        const player = JSON.parse(JSON.stringify(json));\r\n        setPlayer(player);\r\n      };*/\r\n    \r\n    return (\r\n        <div className=\"league-profile\">\r\n            <div className=\"league-profile-header\">\r\n                <div className=\"league-profile-header-picture-container\">\r\n                    <img className=\"league-profile-picture\" src={player.IconIdSrc} alt=\"\"></img>\r\n                </div>\r\n                <div className=\"league-profile-header-text\">\r\n                    <h1>{player.leagueName}</h1>\r\n                    <h1>Level: {player.level}</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"league-info\">\r\n                {\r\n                    //img for solo duo rank: `opgg-static.akamaized.net/images/medals/${player.soloDuoRank}.png?image=q_auto&v=1`\r\n                    //img for flex: `opgg-static.akamaized.net/images/medals/${player.flexRank}.png?image=q_auto&v=1`\r\n                }\r\n                {/*<h1>{player.soloDuoRank}</h1>\r\n                <h1>{player.flexRank}</h1>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeagueProfile;"]},"metadata":{},"sourceType":"module"}